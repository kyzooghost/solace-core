/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IComptrollerRinkebyInterface extends ethers.utils.Interface {
  functions: {
    "markets(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "markets", values: [string]): string;

  decodeFunctionResult(functionFragment: "markets", data: BytesLike): Result;

  events: {};
}

export class IComptrollerRinkeby extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IComptrollerRinkebyInterface;

  functions: {
    markets(
      market: string,
      overrides?: CallOverrides
    ): Promise<{
      isListed: boolean;
      collateralFactorMantissa: BigNumber;
      0: boolean;
      1: BigNumber;
    }>;

    "markets(address)"(
      market: string,
      overrides?: CallOverrides
    ): Promise<{
      isListed: boolean;
      collateralFactorMantissa: BigNumber;
      0: boolean;
      1: BigNumber;
    }>;
  };

  markets(
    market: string,
    overrides?: CallOverrides
  ): Promise<{
    isListed: boolean;
    collateralFactorMantissa: BigNumber;
    0: boolean;
    1: BigNumber;
  }>;

  "markets(address)"(
    market: string,
    overrides?: CallOverrides
  ): Promise<{
    isListed: boolean;
    collateralFactorMantissa: BigNumber;
    0: boolean;
    1: BigNumber;
  }>;

  callStatic: {
    markets(
      market: string,
      overrides?: CallOverrides
    ): Promise<{
      isListed: boolean;
      collateralFactorMantissa: BigNumber;
      0: boolean;
      1: BigNumber;
    }>;

    "markets(address)"(
      market: string,
      overrides?: CallOverrides
    ): Promise<{
      isListed: boolean;
      collateralFactorMantissa: BigNumber;
      0: boolean;
      1: BigNumber;
    }>;
  };

  filters: {};

  estimateGas: {
    markets(market: string, overrides?: CallOverrides): Promise<BigNumber>;

    "markets(address)"(
      market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    markets(
      market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "markets(address)"(
      market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
