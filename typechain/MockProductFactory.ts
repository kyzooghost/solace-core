/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockProduct } from "./MockProduct";

export class MockProductFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _policyManager: string,
    _registry: string,
    _coveredPlatform: string,
    _maxCoverAmount: BigNumberish,
    _maxCoverPerUser: BigNumberish,
    _minPeriod: BigNumberish,
    _maxPeriod: BigNumberish,
    _cancelFee: BigNumberish,
    _price: BigNumberish,
    _quoter: string,
    overrides?: Overrides
  ): Promise<MockProduct> {
    return super.deploy(
      _policyManager,
      _registry,
      _coveredPlatform,
      _maxCoverAmount,
      _maxCoverPerUser,
      _minPeriod,
      _maxPeriod,
      _cancelFee,
      _price,
      _quoter,
      overrides || {}
    ) as Promise<MockProduct>;
  }
  getDeployTransaction(
    _policyManager: string,
    _registry: string,
    _coveredPlatform: string,
    _maxCoverAmount: BigNumberish,
    _maxCoverPerUser: BigNumberish,
    _minPeriod: BigNumberish,
    _maxPeriod: BigNumberish,
    _cancelFee: BigNumberish,
    _price: BigNumberish,
    _quoter: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _policyManager,
      _registry,
      _coveredPlatform,
      _maxCoverAmount,
      _maxCoverPerUser,
      _minPeriod,
      _maxPeriod,
      _cancelFee,
      _price,
      _quoter,
      overrides || {}
    );
  }
  attach(address: string): MockProduct {
    return super.attach(address) as MockProduct;
  }
  connect(signer: Signer): MockProductFactory {
    return super.connect(signer) as MockProductFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockProduct {
    return new Contract(address, _abi, signerOrProvider) as MockProduct;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPolicyManager",
        name: "_policyManager",
        type: "address",
      },
      {
        internalType: "contract IRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_coveredPlatform",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxCoverAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCoverPerUser",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_minPeriod",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_maxPeriod",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_cancelFee",
        type: "uint64",
      },
      {
        internalType: "uint24",
        name: "_price",
        type: "uint24",
      },
      {
        internalType: "address",
        name: "_quoter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "policyId",
        type: "uint256",
      },
    ],
    name: "ClaimSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "policyID",
        type: "uint256",
      },
    ],
    name: "PolicyCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "policyID",
        type: "uint256",
      },
    ],
    name: "PolicyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "policyID",
        type: "uint256",
      },
    ],
    name: "PolicyExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activeCoverAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activePolicyIDs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionContract",
        type: "address",
      },
    ],
    name: "appraisePosition",
    outputs: [
      {
        internalType: "uint256",
        name: "positionAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policyholder",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_coverLimit",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_blocks",
        type: "uint64",
      },
    ],
    name: "buyPolicy",
    outputs: [
      {
        internalType: "uint256",
        name: "policyID",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelFee",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_policyID",
        type: "uint256",
      },
    ],
    name: "cancelPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "coveredPlatform",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_policyID",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_blocks",
        type: "uint64",
      },
    ],
    name: "extendPolicy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policy",
        type: "address",
      },
    ],
    name: "getPolicyExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "expirationDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policy",
        type: "address",
      },
    ],
    name: "getPolicyLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "coverLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policyholder",
        type: "address",
      },
      {
        internalType: "address",
        name: "_positionContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_coverLimit",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_blocks",
        type: "uint64",
      },
    ],
    name: "getQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCovered",
    outputs: [
      {
        internalType: "uint256",
        name: "coveredAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAuthorizedSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCoverAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCoverPerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policyManager",
    outputs: [
      {
        internalType: "contract IPolicyManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "productPolicyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_cancelFee",
        type: "uint64",
      },
    ],
    name: "setCancelFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCoverAmount",
        type: "uint256",
      },
    ],
    name: "setMaxCoverAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCoverPerUser",
        type: "uint256",
      },
    ],
    name: "setMaxCoverPerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_maxPeriod",
        type: "uint64",
      },
    ],
    name: "setMaxPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_minPeriod",
        type: "uint64",
      },
    ],
    name: "setMinPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "_price",
        type: "uint24",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_policyIDs",
        type: "uint256[]",
      },
    ],
    name: "updateActivePolicies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023db380380620023db833981016040819052620000349162000130565b50600160008181558154336001600160a01b0319918216179092556003805483166001600160a01b039c8d161790556004805483169a8c169a909a17909955600580549091169790991696909617909755600693909355600791909155600880546001600160401b0319166001600160401b0392831617600160401b600160801b031916680100000000000000009383169390930292909217600160801b600160c01b031916600160801b91909516029390931762ffffff60c01b1916600160c01b62ffffff90921691909102179091556009819055600a556200021b565b80516001600160401b03811681146200012b57600080fd5b919050565b6000806000806000806000806000806101408b8d03121562000150578586fd5b8a516200015d8162000202565b60208c0151909a50620001708162000202565b60408c0151909950620001838162000202565b60608c015160808d015191995097509550620001a260a08c0162000113565b9450620001b260c08c0162000113565b9350620001c260e08c0162000113565b92506101008b015162ffffff81168114620001db578283fd5b6101208c0151909250620001ef8162000202565b809150509295989b9194979a5092959850565b6001600160a01b03811681146200021857600080fd5b50565b6121b0806200022b6000396000f3fe6080604052600436106102345760003560e01c80636d25b24811610138578063ab033ea9116100b0578063bc9f761a1161007f578063eb12d61e11610064578063eb12d61e146105df578063fc51843c146105ff578063ffd49c841461061457610234565b8063bc9f761a1461059f578063db38c82a146105bf57610234565b8063ab033ea91461052a578063ab3dbf3b1461054a578063b20e8bcc1461055f578063bc35ca291461057f57610234565b8063888492a1116101075780638b85cc7e116100ec5780638b85cc7e146104de578063a035b1fe146104f3578063a734f06e1461051557610234565b8063888492a1146104a957806388f6f467146104c957610234565b80636d25b2481461044a5780637b1039991461046a5780637e9e1abe1461047f578063811143411461049457610234565b80633dcadb60116101cb57806349dfa67b1161019a5780635dfa01031161017f5780635dfa0103146103f75780635e23e15e146104175780636758994a1461043757610234565b806349dfa67b146103b55780635aa6e675146103d557610234565b80633dcadb601461033357806346c7201f1461035357806349045e161461037357806349b9a67f146103a057610234565b80631e0ae187116102075780631e0ae187146102bd578063238efcbc146102eb578063294b039b146103005780632a9d2dc51461032057610234565b8063067b9045146102395780630e316ab71461026457806314025dcd1461028657806319baf2d4146102a8575b600080fd5b34801561024557600080fd5b5061024e610629565b60405161025b9190611fd9565b60405180910390f35b34801561027057600080fd5b5061028461027f3660046119cf565b61062f565b005b34801561029257600080fd5b5061029b6106bd565b60405161025b9190612032565b3480156102b457600080fd5b5061024e6106d4565b3480156102c957600080fd5b506102dd6102d8366004611b14565b6106da565b60405161025b929190612024565b3480156102f757600080fd5b506102846106f6565b34801561030c57600080fd5b5061028461031b366004611bbf565b61078c565b61024e61032e366004611ac2565b6107bb565b34801561033f57600080fd5b5061028461034e366004611ba3565b610c8e565b34801561035f57600080fd5b5061024e61036e366004611bbf565b610cf5565b34801561037f57600080fd5b5061039361038e3660046119cf565b610d16565b60405161025b9190611cde565b3480156103ac57600080fd5b5061029b610d2b565b3480156103c157600080fd5b5061024e6103d03660046119cf565b610d42565b3480156103e157600080fd5b506103ea610d5a565b60405161025b9190611c72565b34801561040357600080fd5b50610284610412366004611bbf565b610d69565b34801561042357600080fd5b50610284610432366004611c13565b610d98565b610284610445366004611bef565b610df5565b34801561045657600080fd5b50610284610465366004611c13565b6111a3565b34801561047657600080fd5b506103ea6111f1565b34801561048b57600080fd5b5061024e611200565b3480156104a057600080fd5b5061024e611206565b3480156104b557600080fd5b5061024e6104c43660046119cf565b61120c565b3480156104d557600080fd5b506103ea611213565b3480156104ea57600080fd5b506103ea611222565b3480156104ff57600080fd5b50610508611231565b60405161025b9190611fc9565b34801561052157600080fd5b506103ea611243565b34801561053657600080fd5b506102846105453660046119cf565b61125b565b34801561055657600080fd5b506103ea6112b4565b34801561056b57600080fd5b5061028461057a366004611bbf565b6112c3565b34801561058b57600080fd5b5061024e61059a366004611ac2565b6115fe565b3480156105ab57600080fd5b506102846105ba366004611c13565b611622565b3480156105cb57600080fd5b5061024e6105da366004611a0e565b61168e565b3480156105eb57600080fd5b506102846105fa3660046119cf565b611696565b34801561060b57600080fd5b5061024e611713565b34801561062057600080fd5b5061029b611719565b60075481565b6001546001600160a01b031633146106625760405162461bcd60e51b815260040161065990611ce9565b60405180910390fd5b6001600160a01b0381166000908152600d602052604090819020805460ff19169055517f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b906106b2908390611c72565b60405180910390a150565b600854600160801b900467ffffffffffffffff1681565b60095481565b6000806106e78484611729565b5050600a54600b549250929050565b6002546001600160a01b031633146107205760405162461bcd60e51b815260040161065990611ce9565b600280546001805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba5690610782903390611c72565b60405180910390a1565b6001546001600160a01b031633146107b65760405162461bcd60e51b815260040161065990611ce9565b600655565b6000600260005414156107e05760405162461bcd60e51b815260040161065990611f5b565b600260009081556040516107fa9087908790602001611c4b565b60408051601f1981840301815282825280516020918201206000818152600c9092529190205460035463706dcb6560e01b8452919350916001600160a01b039091169063706dcb6590610851908490600401611fd9565b60206040518083038186803b15801561086957600080fd5b505afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190611b83565b156108be5760405162461bcd60e51b815260040161065990611eed565b60006108ca888861168e565b9050806108e95760405162461bcd60e51b815260040161065990611d20565b60006127106108f883896120ab565b610902919061208b565b905060065481600a546109159190612047565b11156109335760405162461bcd60e51b815260040161065990611e48565b6007548111156109555760405162461bcd60e51b815260040161065990611e7f565b6000610962888885611979565b905080341015801561097357508015155b61098f5760405162461bcd60e51b815260040161065990611db4565b803411156109cf57336108fc6109a583346120ca565b6040518115909202916000818181858888f193505050501580156109cd573d6000803e3d6000fd5b505b60085467ffffffffffffffff90811690881610801590610a06575060085467ffffffffffffffff600160401b909104811690881611155b610a225760405162461bcd60e51b815260040161065990611e11565b600088118015610a3457506127108811155b610a505760405162461bcd60e51b815260040161065990611f24565b60048054604080516361d027b360e01b815290516001600160a01b03909216926361d027b3928282019260209290829003018186803b158015610a9257600080fd5b505afa158015610aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aca91906119f2565b6001600160a01b031663439370b1826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b505050505060008767ffffffffffffffff1643610b359190612047565b6003546008546040516392382a2760e01b81529293506001600160a01b03909116916392382a2791610b7f918f918f9189918891600160c01b90910462ffffff1690600401611c86565b602060405180830381600087803b158015610b9957600080fd5b505af1158015610bad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd19190611bd7565b945082600a6000828254610be59190612047565b9091555050600b805460018101825560009182527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9018690556009805491610c2c8361210a565b90915550506000868152600c602052604090819020869055517fde5ef345cecbaaffdfbe2454b7947aa14037bac2f45e4fc98976f8bffea3862390610c72908790611fd9565b60405180910390a1505060016000555090979650505050505050565b6001546001600160a01b03163314610cb85760405162461bcd60e51b815260040161065990611ce9565b6008805462ffffff909216600160c01b027fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff909216919091179055565b600b8181548110610d0557600080fd5b600091825260209091200154905081565b600d6020526000908152604090205460ff1681565b600854600160401b900467ffffffffffffffff1681565b50600854600160401b900467ffffffffffffffff1690565b6001546001600160a01b031681565b6001546001600160a01b03163314610d935760405162461bcd60e51b815260040161065990611ce9565b600755565b6001546001600160a01b03163314610dc25760405162461bcd60e51b815260040161065990611ce9565b6008805467ffffffffffffffff909216600160401b026fffffffffffffffff000000000000000019909216919091179055565b60026000541415610e185760405162461bcd60e51b815260040161065990611f5b565b60026000908155600354604051639588d85b60e01b8152829182918291829182916001600160a01b031690639588d85b90610e57908b90600401611fd9565b60c06040518083038186803b158015610e6f57600080fd5b505afa158015610e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea79190611a46565b955095509550955095509550336001600160a01b0316866001600160a01b031614610ee45760405162461bcd60e51b815260040161065990611f92565b6001600160a01b0385163014610f0c5760405162461bcd60e51b815260040161065990611eb6565b600064e8d4a5100062ffffff8316610f2e67ffffffffffffffff8b16876120ab565b610f3891906120ab565b610f42919061208b565b9050803410158015610f5357508015155b610f6f5760405162461bcd60e51b815260040161065990611db4565b80341115610faf57336108fc610f8583346120ca565b6040518115909202916000818181858888f19350505050158015610fad573d6000803e3d6000fd5b505b60048054604080516361d027b360e01b815290516001600160a01b03909216926361d027b3928282019260209290829003018186803b158015610ff157600080fd5b505afa158015611005573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102991906119f2565b6001600160a01b031663439370b1826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561106357600080fd5b505af1158015611077573d6000803e3d6000fd5b50505050506000888461108a919061205f565b9050600061109843836120e1565b60085490915067ffffffffffffffff908116908216108015906110d2575060085467ffffffffffffffff600160401b909104811690821611155b6110ee5760405162461bcd60e51b815260040161065990611e11565b600354604051633046ba2d60e11b81526001600160a01b039091169063608d745a90611128908e908d908c908c9089908c90600401611fe2565b600060405180830381600087803b15801561114257600080fd5b505af1158015611156573d6000803e3d6000fd5b505050507f89e141a4cbec44a61a9ba33d0f18534d76da74909f66ba62cfe1c6d094711b288b6040516111899190611fd9565b60405180910390a150506001600055505050505050505050565b6001546001600160a01b031633146111cd5760405162461bcd60e51b815260040161065990611ce9565b6008805467ffffffffffffffff191667ffffffffffffffff92909216919091179055565b6004546001600160a01b031681565b600a5481565b60065481565b5060065490565b6005546001600160a01b031681565b6002546001600160a01b031681565b600854600160c01b900462ffffff1681565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6001546001600160a01b031633146112855760405162461bcd60e51b815260040161065990611ce9565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b600260005414156112e65760405162461bcd60e51b815260040161065990611f5b565b60026000908155600354604051639588d85b60e01b815282918291829182916001600160a01b0390911690639588d85b90611325908990600401611fd9565b60c06040518083038186803b15801561133d57600080fd5b505afa158015611351573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113759190611a46565b9550955095505094509450336001600160a01b0316856001600160a01b0316146113b15760405162461bcd60e51b815260040161065990611f92565b6001600160a01b03841630146113d95760405162461bcd60e51b815260040161065990611eb6565b60006113e543846120e1565b9050600064e8d4a5100062ffffff84166114098767ffffffffffffffff86166120ab565b61141391906120ab565b61141d919061208b565b600854909150600160801b900467ffffffffffffffff1681116114525760405162461bcd60e51b815260040161065990611d57565b600354604051630852cd8d60e31b81526001600160a01b03909116906342966c6890611482908b90600401611fd9565b600060405180830381600087803b15801561149c57600080fd5b505af11580156114b0573d6000803e3d6000fd5b505060048054604080516361d027b360e01b815290516001600160a01b0390921694506361d027b393508083019260209291829003018186803b1580156114f657600080fd5b505afa15801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e91906119f2565b6001600160a01b031663410085df33600860109054906101000a900467ffffffffffffffff1667ffffffffffffffff168461156991906120ca565b6040518363ffffffff1660e01b8152600401611586929190611cc5565b600060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050507f51705177697daa320000a2e9359d611c199200a0428ac3d7d834d6fd0b5a234b886040516115e79190611fd9565b60405180910390a150506001600055505050505050565b60008061160b868661168e565b9050611618848483611979565b9695505050505050565b6001546001600160a01b0316331461164c5760405162461bcd60e51b815260040161065990611ce9565b6008805467ffffffffffffffff909216600160801b027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff909216919091179055565b606492915050565b6001546001600160a01b031633146116c05760405162461bcd60e51b815260040161065990611ce9565b6001600160a01b0381166000908152600d602052604090819020805460ff19166001179055517f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24906106b2908390611c72565b600a5490565b60085467ffffffffffffffff1681565b60005b818110156119745760035443906001600160a01b0316637b206e5d85858581811061176757634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b815260040161178a9190611fd9565b60206040518083038186803b1580156117a257600080fd5b505afa1580156117b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117da9190611c2f565b67ffffffffffffffff161015611962576003546001600160a01b0316632223de1b84848481811061181b57634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b815260040161183e9190611fd9565b60206040518083038186803b15801561185657600080fd5b505afa15801561186a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188e9190611bd7565b600a600082825461189f91906120ca565b9091555050600354600b80546001600160a01b03909216916342966c689190849081106118dc57634e487b7160e01b600052603260045260246000fd5b90600052602060002001546040518263ffffffff1660e01b81526004016119039190611fd9565b600060405180830381600087803b15801561191d57600080fd5b505af1158015611931573d6000803e3d6000fd5b50505050600b818154811061195657634e487b7160e01b600052603260045260246000fd5b60009182526020822001555b8061196c8161210a565b91505061172c565b505050565b600854600090662386f26fc1000090600160c01b900462ffffff1667ffffffffffffffff85166119a987866120ab565b6119b391906120ab565b6119bd91906120ab565b6119c7919061208b565b949350505050565b6000602082840312156119e0578081fd5b81356119eb8161213b565b9392505050565b600060208284031215611a03578081fd5b81516119eb8161213b565b60008060408385031215611a20578081fd5b8235611a2b8161213b565b91506020830135611a3b8161213b565b809150509250929050565b60008060008060008060c08789031215611a5e578182fd5b8651611a698161213b565b6020880151909650611a7a8161213b565b6040880151909550611a8b8161213b565b606088015160808901519195509350611aa381612164565b60a0880151909250611ab481612153565b809150509295509295509295565b60008060008060808587031215611ad7578384fd5b8435611ae28161213b565b93506020850135611af28161213b565b9250604085013591506060850135611b0981612164565b939692955090935050565b60008060208385031215611b26578182fd5b823567ffffffffffffffff80821115611b3d578384fd5b818501915085601f830112611b50578384fd5b813581811115611b5e578485fd5b8660208083028501011115611b71578485fd5b60209290920196919550909350505050565b600060208284031215611b94578081fd5b815180151581146119eb578182fd5b600060208284031215611bb4578081fd5b81356119eb81612153565b600060208284031215611bd0578081fd5b5035919050565b600060208284031215611be8578081fd5b5051919050565b60008060408385031215611c01578182fd5b823591506020830135611a3b81612164565b600060208284031215611c24578081fd5b81356119eb81612164565b600060208284031215611c40578081fd5b81516119eb81612164565b6bffffffffffffffffffffffff19606093841b811682529190921b16601482015260280190565b6001600160a01b0391909116815260200190565b6001600160a01b039586168152939094166020840152604083019190915267ffffffffffffffff16606082015262ffffff909116608082015260a00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f7a65726f20706f736974696f6e2076616c756500000000000000000000000000604082015260600190565b60208082526027908201527f726566756e6420616d6f756e74206c657373207468616e2063616e63656c617460408201527f696f6e2066656500000000000000000000000000000000000000000000000000606082015260800190565b60208082526027908201527f696e73756666696369656e74207061796d656e74206f72207072656d69756d2060408201527f6973207a65726f00000000000000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f696e76616c696420706572696f64000000000000000000000000000000000000604082015260600190565b6020808252601d908201527f6d617820636f766572656420616d6f756e742069732072656163686564000000604082015260600190565b6020808252601a908201527f6f766572206d617820636f7665722073696e676c652075736572000000000000604082015260600190565b6020808252600d908201527f77726f6e672070726f6475637400000000000000000000000000000000000000604082015260600190565b60208082526010908201527f6475706c696361746520706f6c69637900000000000000000000000000000000604082015260600190565b6020808252601e908201527f696e76616c696420636f766572206c696d69742070657263656e746167650000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600d908201527f21706f6c696379686f6c64657200000000000000000000000000000000000000604082015260600190565b62ffffff91909116815260200190565b90815260200190565b9586526001600160a01b039485166020870152929093166040850152606084015267ffffffffffffffff909116608083015262ffffff1660a082015260c00190565b918252602082015260400190565b67ffffffffffffffff91909116815260200190565b6000821982111561205a5761205a612125565b500190565b600067ffffffffffffffff80831681851680830382111561208257612082612125565b01949350505050565b6000826120a657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156120c5576120c5612125565b500290565b6000828210156120dc576120dc612125565b500390565b600067ffffffffffffffff8381169083168181101561210257612102612125565b039392505050565b600060001982141561211e5761211e612125565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461215057600080fd5b50565b62ffffff8116811461215057600080fd5b67ffffffffffffffff8116811461215057600080fdfea2646970667358221220f32714e559ecd8fb49b507dbbfee595f0abaf03706104adf4535a8591c70153e64736f6c63430008000033";
