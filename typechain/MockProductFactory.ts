/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockProduct } from "./MockProduct";

export class MockProductFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_registry: string, overrides?: Overrides): Promise<MockProduct> {
    return super.deploy(_registry, overrides || {}) as Promise<MockProduct>;
  }
  getDeployTransaction(
    _registry: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  attach(address: string): MockProduct {
    return super.attach(address) as MockProduct;
  }
  connect(signer: Signer): MockProductFactory {
    return super.connect(signer) as MockProductFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockProduct {
    return new Contract(address, _abi, signerOrProvider) as MockProduct;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "policy",
        type: "address",
      },
    ],
    name: "PolicyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "policy",
        type: "address",
      },
    ],
    name: "PolicyDeleted",
    type: "event",
  },
  {
    inputs: [],
    name: "createPolicy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policy",
        type: "address",
      },
    ],
    name: "deletePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105473803806105478339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6104398061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635fabdf7c146100465780637b10399914610062578063a91a0ca314610080575b600080fd5b610060600480360381019061005b9190610297565b61009e565b005b61006a610163565b6040516100779190610353565b60405180910390f35b610088610187565b6040516100959190610338565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378d38d82826040518263ffffffff1660e01b81526004016100f79190610338565b600060405180830381600087803b15801561011157600080fd5b505af1158015610125573d6000803e3d6000fd5b505050507f9a3ff41a17fac67cf81d676a8a3fe47e718869470cfb2c6b452ac27996d63267816040516101589190610338565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008042434060405160200161019e92919061030c565b6040516020818303038152906040528051906020012060001c905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b84ef081826040518263ffffffff1660e01b81526004016102129190610338565b600060405180830381600087803b15801561022c57600080fd5b505af1158015610240573d6000803e3d6000fd5b505050507f2f111d8a56aa0ad671b0442ae028827407496656571a697781157db90a03ae14816040516102739190610338565b60405180910390a18091505090565b600081359050610291816103ec565b92915050565b6000602082840312156102a957600080fd5b60006102b784828501610282565b91505092915050565b6102c98161036e565b82525050565b6102e06102db82610380565b6103d8565b82525050565b6102ef816103b4565b82525050565b610306610301826103aa565b6103e2565b82525050565b600061031882856102f5565b60208201915061032882846102cf565b6020820191508190509392505050565b600060208201905061034d60008301846102c0565b92915050565b600060208201905061036860008301846102e6565b92915050565b60006103798261038a565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103bf826103c6565b9050919050565b60006103d18261038a565b9050919050565b6000819050919050565b6000819050919050565b6103f58161036e565b811461040057600080fd5b5056fea2646970667358221220bc80674e8d2006efce0d47d538b189a8fb6fee58669139103909e9e61a178f2864736f6c63430008000033";
