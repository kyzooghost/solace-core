/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Weth9 } from "./Weth9";

export class Weth9Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Weth9> {
    return super.deploy(overrides || {}) as Promise<Weth9>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Weth9 {
    return super.attach(address) as Weth9;
  }
  connect(signer: Signer): Weth9Factory {
    return super.connect(signer) as Weth9Factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Weth9 {
    return new Contract(address, _abi, signerOrProvider) as Weth9;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052600d60808190526c2bb930b83832b21022ba3432b960991b60a090815261002e916000919061007a565b50604080518082019091526004808252630ae8aa8960e31b602090920191825261005a9160019161007a565b506002805460ff1916601217905534801561007457600080fd5b5061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b60028104600182168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b6108208061015d6000396000f3fe6080604052600436106100c05760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e8578063d0e30db0146100cf578063dd62ed3e14610208576100cf565b8063313ce5671461019157806370a08231146101b357806395d89b41146101d3576100cf565b806318160ddd116100a557806318160ddd1461012f57806323b872dd146101515780632e1a7d4d14610171576100cf565b806306fdde03146100d7578063095ea7b314610102576100cf565b366100cf576100cd610228565b005b6100cd610228565b3480156100e357600080fd5b506100ec610288565b6040516100f99190610700565b60405180910390f35b34801561010e57600080fd5b5061012261011d3660046106b4565b610316565b6040516100f991906106f5565b34801561013b57600080fd5b50610144610380565b6040516100f99190610753565b34801561015d57600080fd5b5061012261016c366004610679565b610384565b34801561017d57600080fd5b506100cd61018c3660046106dd565b610506565b34801561019d57600080fd5b506101a66105b8565b6040516100f9919061075c565b3480156101bf57600080fd5b506101446101ce36600461062d565b6105c1565b3480156101df57600080fd5b506100ec6105d3565b3480156101f457600080fd5b506101226102033660046106b4565b6105e0565b34801561021457600080fd5b50610144610223366004610647565b6105f4565b336000908152600360205260408120805434929061024790849061076a565b909155505060405133907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9061027e903490610753565b60405180910390a2565b6000805461029590610799565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190610799565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061036f908690610753565b60405180910390a350600192915050565b4790565b6001600160a01b0383166000908152600360205260408120548211156103a957600080fd5b6001600160a01b03841633148015906103e757506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610455576001600160a01b038416600090815260046020908152604080832033845290915290205482111561041c57600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061044f908490610782565b90915550505b6001600160a01b0384166000908152600360205260408120805484929061047d908490610782565b90915550506001600160a01b038316600090815260036020526040812080548492906104aa90849061076a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104f49190610753565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561052257600080fd5b3360009081526003602052604081208054839290610541908490610782565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610573573d6000803e3d6000fd5b50336001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516105ad9190610753565b60405180910390a250565b60025460ff1681565b60036020526000908152604090205481565b6001805461029590610799565b60006105ed338484610384565b9392505050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b038116811461062857600080fd5b919050565b60006020828403121561063e578081fd5b6105ed82610611565b60008060408385031215610659578081fd5b61066283610611565b915061067060208401610611565b90509250929050565b60008060006060848603121561068d578081fd5b61069684610611565b92506106a460208501610611565b9150604084013590509250925092565b600080604083850312156106c6578182fd5b6106cf83610611565b946020939093013593505050565b6000602082840312156106ee578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561072c57858101830151858201604001528201610710565b8181111561073d5783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff91909116815260200190565b6000821982111561077d5761077d6107d4565b500190565b600082821015610794576107946107d4565b500390565b6002810460018216806107ad57607f821691505b602082108114156107ce57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bd720ba7d4348a0253e94f1472fb083785bb9f5cf7243f2ebb30993242670bda64736f6c63430008000033";
