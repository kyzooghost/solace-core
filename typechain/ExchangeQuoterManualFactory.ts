/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ExchangeQuoterManual } from "./ExchangeQuoterManual";

export class ExchangeQuoterManualFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    overrides?: Overrides
  ): Promise<ExchangeQuoterManual> {
    return super.deploy(
      _governance,
      overrides || {}
    ) as Promise<ExchangeQuoterManual>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): ExchangeQuoterManual {
    return super.attach(address) as ExchangeQuoterManual;
  }
  connect(signer: Signer): ExchangeQuoterManualFactory {
    return super.connect(signer) as ExchangeQuoterManualFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeQuoterManual {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExchangeQuoterManual;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rates",
        type: "uint256[]",
      },
    ],
    name: "setRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "tokenToEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107d73803806107d783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610746806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635aa6e6751161005b5780635aa6e675146100c85780638b85cc7e146100dd578063a8734f0b146100e5578063ab033ea9146100f85761007d565b8063238efcbc14610082578063258b7ca41461008c578063468fb006146100b5575b600080fd5b61008a61010b565b005b61009f61009a36600461044b565b6101aa565b6040516100ac9190610580565b60405180910390f35b61008a6100c3366004610474565b61025c565b6100d0610343565b6040516100ac91906104fe565b6100d0610352565b61009f6100f3366004610431565b610361565b61008a610106366004610431565b610373565b6001546001600160a01b0316331461013e5760405162461bcd60e51b815260040161013590610512565b60405180910390fd5b600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba56906101a09033906104fe565b60405180910390a1565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e557600080fd5b505afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d91906104dd565b61022890600a6105ef565b6001600160a01b03841660009081526002602052604090205461024b90846106c0565b6102559190610589565b9392505050565b6000546001600160a01b031633146102865760405162461bcd60e51b815260040161013590610512565b828181146102a65760405162461bcd60e51b815260040161013590610549565b60005b8181101561033b578383828181106102d157634e487b7160e01b600052603260045260246000fd5b90506020020135600260008888858181106102fc57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103119190610431565b6001600160a01b03168152602081019190915260400160002055610334816106df565b90506102a9565b505050505050565b6000546001600160a01b031681565b6001546001600160a01b031681565b60026020526000908152604090205481565b6000546001600160a01b0316331461039d5760405162461bcd60e51b815260040161013590610512565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b80356001600160a01b03811681146103e357600080fd5b919050565b60008083601f8401126103f9578182fd5b50813567ffffffffffffffff811115610410578182fd5b602083019150836020808302850101111561042a57600080fd5b9250929050565b600060208284031215610442578081fd5b610255826103cc565b6000806040838503121561045d578081fd5b610466836103cc565b946020939093013593505050565b60008060008060408587031215610489578182fd5b843567ffffffffffffffff808211156104a0578384fd5b6104ac888389016103e8565b909650945060208701359150808211156104c4578384fd5b506104d1878288016103e8565b95989497509550505050565b6000602082840312156104ee578081fd5b815160ff81168114610255578182fd5b6001600160a01b0391909116815260200190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f756e657175616c206c656e677468730000000000000000000000000000000000604082015260600190565b90815260200190565b6000826105a457634e487b7160e01b81526012600452602481fd5b500490565b80825b60018086116105bb57506105e6565b8187048211156105cd576105cd6106fa565b808616156105da57918102915b9490941c9380026105ac565b94509492505050565b600061025560001960ff85168460008261060b57506001610255565b8161061857506000610255565b816001811461062e576002811461063857610665565b6001915050610255565b60ff841115610649576106496106fa565b6001841b91508482111561065f5761065f6106fa565b50610255565b5060208310610133831016604e8410600b8410161715610698575081810a83811115610693576106936106fa565b610255565b6106a584848460016105a9565b8086048211156106b7576106b76106fa565b02949350505050565b60008160001904831182151516156106da576106da6106fa565b500290565b60006000198214156106f3576106f36106fa565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220379043b8f2cd427bdc37ebe77d4c669cfe31ff98561a3378a9e501466718d68564736f6c63430008000033";
