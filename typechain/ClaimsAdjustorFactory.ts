/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ClaimsAdjustor } from "./ClaimsAdjustor";

export class ClaimsAdjustorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_registry: string, overrides?: Overrides): Promise<ClaimsAdjustor> {
    return super.deploy(_registry, overrides || {}) as Promise<ClaimsAdjustor>;
  }
  getDeployTransaction(
    _registry: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  attach(address: string): ClaimsAdjustor {
    return super.attach(address) as ClaimsAdjustor;
  }
  connect(signer: Signer): ClaimsAdjustorFactory {
    return super.connect(signer) as ClaimsAdjustorFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimsAdjustor {
    return new Contract(address, _abi, signerOrProvider) as ClaimsAdjustor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161018438038061018483398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610090565b600060208284031215610073578081fd5b81516001600160a01b0381168114610089578182fd5b9392505050565b60e68061009e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80635aa6e6751460375780637b103999146051575b600080fd5b603d6057565b60405160489190608f565b60405180910390f35b603d6073565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff9190911681526020019056fea2646970667358221220cc6499d28ec8c5e15de509a8fb4a78e2d3bf32a88c565901854190ab8749550164736f6c63430008000033";
