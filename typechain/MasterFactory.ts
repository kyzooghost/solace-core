/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Master } from "./Master";

export class MasterFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _solace: string,
    _solacePerBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<Master> {
    return super.deploy(
      _governance,
      _solace,
      _solacePerBlock,
      overrides || {}
    ) as Promise<Master>;
  }
  getDeployTransaction(
    _governance: string,
    _solace: string,
    _solacePerBlock: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _solace,
      _solacePerBlock,
      overrides || {}
    );
  }
  attach(address: string): Master {
    return super.attach(address) as Master;
  }
  connect(signer: Signer): MasterFactory {
    return super.connect(signer) as MasterFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Master {
    return new Contract(address, _abi, signerOrProvider) as Master;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "contract SOLACE",
        name: "_solace",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_solacePerBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_farmId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_farmAddress",
        type: "address",
      },
    ],
    name: "FarmCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_solacePerBlock",
        type: "uint256",
      },
    ],
    name: "RewardsSet",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allocPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "farmAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdateFarms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numFarms",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farmAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_allocPoints",
        type: "uint256",
      },
    ],
    name: "registerFarm",
    outputs: [
      {
        internalType: "uint256",
        name: "farmId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_farmId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoints",
        type: "uint256",
      },
    ],
    name: "setAllocPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_solacePerBlock",
        type: "uint256",
      },
    ],
    name: "setSolacePerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "solace",
    outputs: [
      {
        internalType: "contract SOLACE",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "solacePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a7f380380610a7f83398101604081905261002f91610067565b600080546001600160a01b039485166001600160a01b03199182161790915560028054939094169216919091179091556003556100c1565b60008060006060848603121561007b578283fd5b8351610086816100a9565b6020850151909350610097816100a9565b80925050604084015190509250925092565b6001600160a01b03811681146100be57600080fd5b50565b6109af806100d06000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637e0de2ef116100975780638d75ef67116100665780638d75ef67146101985780638f908ac7146101ab578063ab033ea9146101be578063f26e5cfe146101d1576100f5565b80637e0de2ef1461016d5780638069aa651461017557806386f44c7b146101885780638b85cc7e14610190576100f5565b8063298a2687116100d3578063298a2687146101355780633ef8d97e146101485780635aa6e6751461015d57806372f9ab4314610165576100f5565b8063032b49f9146100fa5780631fa36cbe14610123578063238efcbc1461012b575b600080fd5b61010d6101083660046107c6565b6101e4565b60405161011a91906108d1565b60405180910390f35b61010d6101f6565b6101336101fc565b005b61010d61014336600461077d565b61029b565b61015061041e565b60405161011a91906107ff565b61015061042d565b61010d61043c565b610133610442565b61010d61018336600461075c565b6104c8565b61010d6104da565b6101506104e0565b6101506101a63660046107c6565b6104ef565b6101336101b93660046107c6565b61050a565b6101336101cc36600461075c565b61057b565b6101336101df3660046107de565b6105d4565b60086020526000908152604090205481565b60045481565b6001546001600160a01b0316331461022f5760405162461bcd60e51b81526004016102269061082c565b60405180910390fd5b600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba56906102919033906107ff565b60405180910390a1565b600080546001600160a01b031633146102c65760405162461bcd60e51b81526004016102269061082c565b6001600160a01b038316600090815260076020526040902054156102fc5760405162461bcd60e51b815260040161022690610863565b60056000815461030b90610948565b91829055506000818152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038981169182179092558452600790925291829020839055600254915163095ea7b360e01b8152929350169063095ea7b39061038590869060001990600401610813565b602060405180830381600087803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d791906107a6565b506103e28183610631565b6040516001600160a01b0384169082907f74c6c5fd9a70ed43945f118ec4990df995359837f5484faeb4e3d6d5d72ae99c90600090a392915050565b6002546001600160a01b031681565b6000546001600160a01b031681565b60035481565b60055460015b8181116104c457600081815260066020526040808220548151633d53298f60e21b815291516001600160a01b039091169263f54ca63c926004808201939182900301818387803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b50505050806104bd90610948565b9050610448565b5050565b60076020526000908152604090205481565b60055481565b6001546001600160a01b031681565b6006602052600090815260409020546001600160a01b031681565b6000546001600160a01b031633146105345760405162461bcd60e51b81526004016102269061082c565b6003819055610541610670565b7f3a9c73865b863f6b3112a48ba71b6cc75b1b5440abddbcba0135c64a4056508b8160405161057091906108d1565b60405180910390a150565b6000546001600160a01b031633146105a55760405162461bcd60e51b81526004016102269061082c565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105fe5760405162461bcd60e51b81526004016102269061082c565b811580159061060f57506005548211155b61062b5760405162461bcd60e51b81526004016102269061089a565b6104c482825b600082815260086020526040902054600454829161064e91610931565b61065891906108da565b60045560008281526008602052604090208190556104c45b60055460035460045460015b83811161073a57600082156106b55760008281526008602052604090205483906106a69086610912565b6106b091906108f2565b6106b8565b60005b6000838152600660205260409081902054905163c7a29c6f60e01b81529192506001600160a01b03169063c7a29c6f906106f69084906004016108d1565b600060405180830381600087803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b50505050508061073390610948565b905061067c565b50505050565b80356001600160a01b038116811461075757600080fd5b919050565b60006020828403121561076d578081fd5b61077682610740565b9392505050565b6000806040838503121561078f578081fd5b61079883610740565b946020939093013593505050565b6000602082840312156107b7578081fd5b81518015158114610776578182fd5b6000602082840312156107d7578081fd5b5035919050565b600080604083850312156107f0578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f616c726561647920726567697374657265640000000000000000000000000000604082015260600190565b60208082526013908201527f6661726d20646f6573206e6f7420657869737400000000000000000000000000604082015260600190565b90815260200190565b600082198211156108ed576108ed610963565b500190565b60008261090d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561092c5761092c610963565b500290565b60008282101561094357610943610963565b500390565b600060001982141561095c5761095c610963565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202beb5cc9e6f78d624d5b732065e08d2a1d0f2f35c001746b39464ca328acc92764736f6c63430008000033";
