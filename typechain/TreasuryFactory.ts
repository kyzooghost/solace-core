/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Treasury } from "./Treasury";

export class TreasuryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _solace: string,
    _swapRouter: string,
    _weth: string,
    overrides?: Overrides
  ): Promise<Treasury> {
    return super.deploy(
      _governance,
      _solace,
      _swapRouter,
      _weth,
      overrides || {}
    ) as Promise<Treasury>;
  }
  getDeployTransaction(
    _governance: string,
    _solace: string,
    _swapRouter: string,
    _weth: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _solace,
      _swapRouter,
      _weth,
      overrides || {}
    );
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): TreasuryFactory {
    return super.connect(signer) as TreasuryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "contract SOLACE",
        name: "_solace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "FundsSpent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "PathSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokenDeposited",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "paths",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "setPath",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "solace",
    outputs: [
      {
        internalType: "contract SOLACE",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "spend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH10",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015023803806200150283398101604081905262000034916200008d565b6001600055600380546001600160a01b039586166001600160a01b03199182161790915560028054948616948216949094179093556005805492851692841692909217909155600680549190931691161790556200010d565b60008060008060808587031215620000a3578384fd5b8451620000b081620000f4565b6020860151909450620000c381620000f4565b6040860151909350620000d681620000f4565b6060860151909250620000e981620000f4565b939692955090935050565b6001600160a01b03811681146200010a57600080fd5b50565b6113e5806200011d6000396000f3fe6080604052600436106100d65760003560e01c80635aa6e6751161007f578063ab033ea911610059578063ab033ea914610261578063af90c35314610281578063c31c9c07146102a1578063e3f1fa73146102b657610133565b80635aa6e675146102175780636de505d91461022c5780638b85cc7e1461024c57610133565b80633fc8cef3116100b05780633fc8cef3146101cd578063439370b1146101e2578063599e4610146101ea57610133565b8063238efcbc1461016d578063338b5dea146101825780633ef8d97e146101a257610133565b36610133573360009081526001602052604090205460ff16610131576002600054141561011e5760405162461bcd60e51b8152600401610115906112af565b60405180910390fd5b600260005561012b6102d6565b60016000555b005b3360009081526001602052604090205460ff16610131576002600054141561011e5760405162461bcd60e51b8152600401610115906112af565b34801561017957600080fd5b50610131610390565b34801561018e57600080fd5b5061013161019d366004610f8e565b61041c565b3480156101ae57600080fd5b506101b76104bd565b6040516101c491906110c1565b60405180910390f35b3480156101d957600080fd5b506101b76104cc565b6101316104db565b3480156101f657600080fd5b5061020a610205366004610f23565b61052a565b6040516101c49190611174565b34801561022357600080fd5b506101b76105c4565b34801561023857600080fd5b50610131610247366004611012565b6105d3565b34801561025857600080fd5b506101b761072c565b34801561026d57600080fd5b5061013161027c366004610f23565b61073b565b34801561028d57600080fd5b5061013161029c366004610f3d565b610794565b3480156102ad57600080fd5b506101b76108fe565b3480156102c257600080fd5b506101316102d1366004610fb7565b61090d565b600660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561032657600080fd5b505af115801561033a573d6000803e3d6000fd5b505060065461035693506001600160a01b031691506109bd9050565b507f44863bc9b335caf97ca3a3ab6fb67776965a88292ed53b0679f8eae4a67b630c34604051610386919061133f565b60405180910390a1565b6004546001600160a01b031633146103ba5760405162461bcd60e51b815260040161011590611187565b600480546003805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba56906103869033906110c1565b3360009081526001602052604090205460ff166104b957600260005414156104565760405162461bcd60e51b8152600401610115906112af565b60026000556104706001600160a01b038316333084610bf9565b610479826109bd565b507fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda82826040516104ab929190611138565b60405180910390a160016000555b5050565b6002546001600160a01b031681565b6006546001600160a01b031681565b3360009081526001602052604090205460ff1661052857600260005414156105155760405162461bcd60e51b8152600401610115906112af565b60026000556105226102d6565b60016000555b565b6007602052600090815260409020805461054390611374565b80601f016020809104026020016040519081016040528092919081815260200182805461056f90611374565b80156105bc5780601f10610591576101008083540402835291602001916105bc565b820191906000526020600020905b81548152906001019060200180831161059f57829003601f168201915b505050505081565b6003546001600160a01b031681565b3360009081526001602052604090205460ff16610726576002600054141561060d5760405162461bcd60e51b8152600401610115906112af565b60026000556003546001600160a01b0316331461063c5760405162461bcd60e51b815260040161011590611187565b6005546040805160c06020601f8801819004028201810190925260a081018681526001600160a01b039093169263c04b8d5992829190899089908190850183828082843760009201919091525050509082525030602082015242604080830191909152606082018790526080909101859052516001600160e01b031960e084901b1681526106cd91906004016112e6565b602060405180830381600087803b1580156106e757600080fd5b505af11580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f9190611061565b5060016000555b50505050565b6004546001600160a01b031681565b6003546001600160a01b031633146107655760405162461bcd60e51b815260040161011590611187565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3360009081526001602052604090205460ff166108f957600260005414156107ce5760405162461bcd60e51b8152600401610115906112af565b60026000556003546001600160a01b031633146107fd5760405162461bcd60e51b815260040161011590611187565b6001600160a01b0383166000908152600760205260409020610820908383610e2c565b506005546001600160a01b038085169163095ea7b39116831561084557600019610848565b60005b6040518363ffffffff1660e01b8152600401610865929190611138565b602060405180830381600087803b15801561087f57600080fd5b505af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190610ff2565b507fdcf1c9f13bfac49d2cb9c41a5ace1ada6fd1335bcd05688595438bb3e32162d18383836040516108eb939291906110f9565b60405180910390a160016000555b505050565b6005546001600160a01b031681565b3360009081526001602052604090205460ff166108f957600260005414156109475760405162461bcd60e51b8152600401610115906112af565b60026000556003546001600160a01b031633146109765760405162461bcd60e51b815260040161011590611187565b61098a6001600160a01b0384168284610c66565b7f2218cddb1955a67c82803a8156a8d52c819e2d3e932801b0556f01c96faaa7128383836040516108eb93929190611151565b6001600160a01b038116600090815260076020526040812080548291906109e390611374565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0f90611374565b8015610a5c5780601f10610a3157610100808354040283529160200191610a5c565b820191906000526020600020905b815481529060010190602001808311610a3f57829003601f168201915b50505050509050805160001415610a77576000915050610bf4565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190610aa69030906004016110c1565b60206040518083038186803b158015610abe57600080fd5b505afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190611061565b9050600063c04b8d5960e01b6040518060a00160405280858152602001306001600160a01b031681526020014281526020018481526020016000815250604051602401610b4391906112e6565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199094169390931790925260055491519092506001600160a01b0390911690610ba99083906110a5565b6000604051808303816000865af19150503d8060008114610be6576040519150601f19603f3d011682016040523d82523d6000602084013e610beb565b606091505b50909450505050505b919050565b610726846323b872dd60e01b858585604051602401610c1a939291906110d5565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152610c85565b6108f98363a9059cbb60e01b8484604051602401610c1a929190611138565b6000610cda826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d149092919063ffffffff16565b8051909150156108f95780806020019051810190610cf89190610ff2565b6108f95760405162461bcd60e51b815260040161011590611252565b6060610d238484600085610d2d565b90505b9392505050565b606082471015610d4f5760405162461bcd60e51b8152600401610115906111be565b610d5885610ded565b610d745760405162461bcd60e51b81526004016101159061121b565b600080866001600160a01b03168587604051610d9091906110a5565b60006040518083038185875af1925050503d8060008114610dcd576040519150601f19603f3d011682016040523d82523d6000602084013e610dd2565b606091505b5091509150610de2828286610df3565b979650505050505050565b3b151590565b60608315610e02575081610d26565b825115610e125782518084602001fd5b8160405162461bcd60e51b81526004016101159190611174565b828054610e3890611374565b90600052602060002090601f016020900481019282610e5a5760008555610ea0565b82601f10610e735782800160ff19823516178555610ea0565b82800160010185558215610ea0579182015b82811115610ea0578235825591602001919060010190610e85565b50610eac929150610eb0565b5090565b5b80821115610eac5760008155600101610eb1565b80356001600160a01b0381168114610bf457600080fd5b60008083601f840112610eed578182fd5b50813567ffffffffffffffff811115610f04578182fd5b602083019150836020828501011115610f1c57600080fd5b9250929050565b600060208284031215610f34578081fd5b610d2682610ec5565b600080600060408486031215610f51578182fd5b610f5a84610ec5565b9250602084013567ffffffffffffffff811115610f75578283fd5b610f8186828701610edc565b9497909650939450505050565b60008060408385031215610fa0578182fd5b610fa983610ec5565b946020939093013593505050565b600080600060608486031215610fcb578283fd5b610fd484610ec5565b925060208401359150610fe960408501610ec5565b90509250925092565b600060208284031215611003578081fd5b81518015158114610d26578182fd5b60008060008060608587031215611027578081fd5b843567ffffffffffffffff81111561103d578182fd5b61104987828801610edc565b90989097506020870135966040013595509350505050565b600060208284031215611072578081fd5b5051919050565b60008151808452611091816020860160208601611348565b601f01601f19169290920160200192915050565b600082516110b7818460208701611348565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03851682526040602083015282604083015282846060840137818301606090810191909152601f909201601f1916010192915050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b600060208252610d266020830184611079565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208252825160a0602084015261130260c0840182611079565b90506001600160a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b90815260200190565b60005b8381101561136357818101518382015260200161134b565b838111156107265750506000910152565b60028104600182168061138857607f821691505b602082108114156113a957634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b0e503703cfa2e9dcf28b3c707a4a5fc55c5b4751acb16b13e04f99ff48facb764736f6c63430008000033";
