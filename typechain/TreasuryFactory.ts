/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Treasury } from "./Treasury";

export class TreasuryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _solace: string,
    _swapRouter: string,
    _weth: string,
    overrides?: Overrides
  ): Promise<Treasury> {
    return super.deploy(
      _governance,
      _solace,
      _swapRouter,
      _weth,
      overrides || {}
    ) as Promise<Treasury>;
  }
  getDeployTransaction(
    _governance: string,
    _solace: string,
    _swapRouter: string,
    _weth: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _solace,
      _swapRouter,
      _weth,
      overrides || {}
    );
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): TreasuryFactory {
    return super.connect(signer) as TreasuryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "contract SOLACE",
        name: "_solace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "FundsSpent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "PathSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokenDeposited",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "paths",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "setPath",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "solace",
    outputs: [
      {
        internalType: "contract SOLACE",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "spend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract WETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014683803806200146883398101604081905262000034916200008c565b60016000819055600280546001600160a01b039687166001600160a01b03199182161790915581549486169481169490941790556004805492851692841692909217909155600580549190931691161790556200010c565b60008060008060808587031215620000a2578384fd5b8451620000af81620000f3565b6020860151909450620000c281620000f3565b6040860151909350620000d581620000f3565b6060860151909250620000e881620000f3565b939692955090935050565b6001600160a01b03811681146200010957600080fd5b50565b61134c806200011c6000396000f3fe6080604052600436106100d65760003560e01c80635aa6e6751161007f578063ab033ea911610059578063ab033ea914610234578063af90c35314610254578063c31c9c0714610274578063e3f1fa73146102895761011b565b80635aa6e675146101ea5780636de505d9146101ff5780638b85cc7e1461021f5761011b565b80633fc8cef3116100b05780633fc8cef3146101a0578063439370b1146101b5578063599e4610146101bd5761011b565b8063238efcbc1461013e578063338b5dea146101555780633ef8d97e146101755761011b565b3661011b57600260005414156101075760405162461bcd60e51b81526004016100fe90611216565b60405180910390fd5b60026000556101146102a9565b6001600055005b600260005414156101075760405162461bcd60e51b81526004016100fe90611216565b34801561014a57600080fd5b50610153610363565b005b34801561016157600080fd5b50610153610170366004610ef5565b6103ef565b34801561018157600080fd5b5061018a610478565b6040516101979190611028565b60405180910390f35b3480156101ac57600080fd5b5061018a610487565b610153610496565b3480156101c957600080fd5b506101dd6101d8366004610e8a565b6104cd565b60405161019791906110db565b3480156101f657600080fd5b5061018a610567565b34801561020b57600080fd5b5061015361021a366004610f79565b610576565b34801561022b57600080fd5b5061018a6106b7565b34801561024057600080fd5b5061015361024f366004610e8a565b6106c6565b34801561026057600080fd5b5061015361026f366004610ea4565b61071f565b34801561028057600080fd5b5061018a610871565b34801561029557600080fd5b506101536102a4366004610f1e565b610880565b600560009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102f957600080fd5b505af115801561030d573d6000803e3d6000fd5b505060055461032993506001600160a01b031691506109199050565b507f44863bc9b335caf97ca3a3ab6fb67776965a88292ed53b0679f8eae4a67b630c3460405161035991906112a6565b60405180910390a1565b6003546001600160a01b0316331461038d5760405162461bcd60e51b81526004016100fe906110ee565b600380546002805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba5690610359903390611028565b600260005414156104125760405162461bcd60e51b81526004016100fe90611216565b600260005561042c6001600160a01b038316333084610b55565b61043582610919565b507fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda828260405161046792919061109f565b60405180910390a150506001600055565b6001546001600160a01b031681565b6005546001600160a01b031681565b600260005414156104b95760405162461bcd60e51b81526004016100fe90611216565b60026000556104c66102a9565b6001600055565b600660205260009081526040902080546104e6906112db565b80601f0160208091040260200160405190810160405280929190818152602001828054610512906112db565b801561055f5780601f106105345761010080835404028352916020019161055f565b820191906000526020600020905b81548152906001019060200180831161054257829003601f168201915b505050505081565b6002546001600160a01b031681565b600260005414156105995760405162461bcd60e51b81526004016100fe90611216565b60026000819055546001600160a01b031633146105c85760405162461bcd60e51b81526004016100fe906110ee565b6004546040805160c06020601f8801819004028201810190925260a081018681526001600160a01b039093169263c04b8d5992829190899089908190850183828082843760009201919091525050509082525030602082015242604080830191909152606082018790526080909101859052516001600160e01b031960e084901b168152610659919060040161124d565b602060405180830381600087803b15801561067357600080fd5b505af1158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190610fc8565b50506001600055505050565b6003546001600160a01b031681565b6002546001600160a01b031633146106f05760405162461bcd60e51b81526004016100fe906110ee565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600260005414156107425760405162461bcd60e51b81526004016100fe90611216565b60026000819055546001600160a01b031633146107715760405162461bcd60e51b81526004016100fe906110ee565b6001600160a01b0383166000908152600660205260409020610794908383610d93565b506004546001600160a01b038085169163095ea7b3911683156107b9576000196107bc565b60005b6040518363ffffffff1660e01b81526004016107d992919061109f565b602060405180830381600087803b1580156107f357600080fd5b505af1158015610807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082b9190610f59565b507fdcf1c9f13bfac49d2cb9c41a5ace1ada6fd1335bcd05688595438bb3e32162d183838360405161085f93929190611060565b60405180910390a15050600160005550565b6004546001600160a01b031681565b600260005414156108a35760405162461bcd60e51b81526004016100fe90611216565b60026000819055546001600160a01b031633146108d25760405162461bcd60e51b81526004016100fe906110ee565b6108e66001600160a01b0384168284610bc8565b7f2218cddb1955a67c82803a8156a8d52c819e2d3e932801b0556f01c96faaa71283838360405161085f939291906110b8565b6001600160a01b0381166000908152600660205260408120805482919061093f906112db565b80601f016020809104026020016040519081016040528092919081815260200182805461096b906112db565b80156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b505050505090508051600014156109d3576000915050610b50565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190610a02903090600401611028565b60206040518083038186803b158015610a1a57600080fd5b505afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190610fc8565b9050600063c04b8d5960e01b6040518060a00160405280858152602001306001600160a01b031681526020014281526020018481526020016000815250604051602401610a9f919061124d565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199094169390931790925260045491519092506001600160a01b0390911690610b0590839061100c565b6000604051808303816000865af19150503d8060008114610b42576040519150601f19603f3d011682016040523d82523d6000602084013e610b47565b606091505b50909450505050505b919050565b610bc2846323b872dd60e01b858585604051602401610b769392919061103c565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152610bec565b50505050565b610be78363a9059cbb60e01b8484604051602401610b7692919061109f565b505050565b6000610c41826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c7b9092919063ffffffff16565b805190915015610be75780806020019051810190610c5f9190610f59565b610be75760405162461bcd60e51b81526004016100fe906111b9565b6060610c8a8484600085610c94565b90505b9392505050565b606082471015610cb65760405162461bcd60e51b81526004016100fe90611125565b610cbf85610d54565b610cdb5760405162461bcd60e51b81526004016100fe90611182565b600080866001600160a01b03168587604051610cf7919061100c565b60006040518083038185875af1925050503d8060008114610d34576040519150601f19603f3d011682016040523d82523d6000602084013e610d39565b606091505b5091509150610d49828286610d5a565b979650505050505050565b3b151590565b60608315610d69575081610c8d565b825115610d795782518084602001fd5b8160405162461bcd60e51b81526004016100fe91906110db565b828054610d9f906112db565b90600052602060002090601f016020900481019282610dc15760008555610e07565b82601f10610dda5782800160ff19823516178555610e07565b82800160010185558215610e07579182015b82811115610e07578235825591602001919060010190610dec565b50610e13929150610e17565b5090565b5b80821115610e135760008155600101610e18565b80356001600160a01b0381168114610b5057600080fd5b60008083601f840112610e54578182fd5b50813567ffffffffffffffff811115610e6b578182fd5b602083019150836020828501011115610e8357600080fd5b9250929050565b600060208284031215610e9b578081fd5b610c8d82610e2c565b600080600060408486031215610eb8578182fd5b610ec184610e2c565b9250602084013567ffffffffffffffff811115610edc578283fd5b610ee886828701610e43565b9497909650939450505050565b60008060408385031215610f07578182fd5b610f1083610e2c565b946020939093013593505050565b600080600060608486031215610f32578283fd5b610f3b84610e2c565b925060208401359150610f5060408501610e2c565b90509250925092565b600060208284031215610f6a578081fd5b81518015158114610c8d578182fd5b60008060008060608587031215610f8e578081fd5b843567ffffffffffffffff811115610fa4578182fd5b610fb087828801610e43565b90989097506020870135966040013595509350505050565b600060208284031215610fd9578081fd5b5051919050565b60008151808452610ff88160208601602086016112af565b601f01601f19169290920160200192915050565b6000825161101e8184602087016112af565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03851682526040602083015282604083015282846060840137818301606090810191909152601f909201601f1916010192915050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b600060208252610c8d6020830184610fe0565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208252825160a0602084015261126960c0840182610fe0565b90506001600160a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b90815260200190565b60005b838110156112ca5781810151838201526020016112b2565b83811115610bc25750506000910152565b6002810460018216806112ef57607f821691505b6020821081141561131057634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220237473c2c8182fed67bb486c88002f3e0002d69177e9913e02c9f7ec6a0c74eb64736f6c63430008000033";
