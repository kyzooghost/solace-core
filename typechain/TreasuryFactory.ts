/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Treasury } from "./Treasury";

export class TreasuryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _swapRouter: string,
    _weth: string,
    _registry: string,
    overrides?: Overrides
  ): Promise<Treasury> {
    return super.deploy(
      _governance,
      _swapRouter,
      _weth,
      _registry,
      overrides || {}
    ) as Promise<Treasury>;
  }
  getDeployTransaction(
    _governance: string,
    _swapRouter: string,
    _weth: string,
    _registry: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _swapRouter,
      _weth,
      _registry,
      overrides || {}
    );
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): TreasuryFactory {
    return super.connect(signer) as TreasuryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "FundsSpent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokenDeposited",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "premiumRecipients",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipientWeights",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routePremiums",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_weights",
        type: "uint32[]",
      },
    ],
    name: "setPremiumRecipients",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "spend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unpaidRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weightSum",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract WETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c6c38038062001c6c8339810160408190526200003491620000aa565b6001600081905580546001600160a01b039586166001600160a01b031991821617909155600480549486169482169490941790935560058054928516928416929092179091556003805491909316911617905562000106565b80516001600160a01b0381168114620000a557600080fd5b919050565b60008060008060808587031215620000c0578384fd5b620000cb856200008d565b9350620000db602086016200008d565b9250620000eb604086016200008d565b9150620000fb606086016200008d565b905092959194509250565b611b5680620001166000396000f3fe6080604052600436106101795760003560e01c80636de505d9116100cb578063ab033ea91161007f578063de0e9a3e11610059578063de0e9a3e146103e5578063e3f1fa7314610405578063ea598cb014610425576101b7565b8063ab033ea914610390578063c245903b146103b0578063c31c9c07146103d0576101b7565b80638195c3f8116100b05780638195c3f8146103445780638b85cc7e14610366578063a734f06e1461037b576101b7565b80636de505d91461030f5780637b1039991461032f576101b7565b806339e54be91161012d578063410085df11610107578063410085df146102d2578063439370b1146102f25780635aa6e675146102fa576101b7565b806339e54be9146102a05780633ccfd60b146102a85780633fc8cef3146102bd576101b7565b8063238efcbc1161015e578063238efcbc1461023e5780632f97fa2414610253578063338b5dea14610280576101b7565b8063051dd997146101e657806310e6812a1461021c576101b7565b366101b7577f44863bc9b335caf97ca3a3ab6fb67776965a88292ed53b0679f8eae4a67b630c346040516101ad91906119e5565b60405180910390a1005b7f44863bc9b335caf97ca3a3ab6fb67776965a88292ed53b0679f8eae4a67b630c346040516101ad91906119e5565b3480156101f257600080fd5b506102066102013660046114a5565b610445565b60405161021391906119e5565b60405180910390f35b34801561022857600080fd5b5061023c610237366004611549565b610457565b005b34801561024a57600080fd5b5061023c61054b565b34801561025f57600080fd5b5061027361026e366004611682565b6105e1565b604051610213919061171e565b34801561028c57600080fd5b5061023c61029b3660046114dd565b61060b565b61023c61068a565b3480156102b457600080fd5b5061023c61084e565b3480156102c957600080fd5b5061027361088b565b3480156102de57600080fd5b5061023c6102ed3660046114dd565b61089a565b61023c6109e9565b34801561030657600080fd5b50610273610a18565b34801561031b57600080fd5b5061023c61032a3660046115d2565b610a27565b34801561033b57600080fd5b50610273610c28565b34801561035057600080fd5b50610359610c37565b60405161021391906119ee565b34801561037257600080fd5b50610273610c43565b34801561038757600080fd5b50610273610c52565b34801561039c57600080fd5b5061023c6103ab3660046114a5565b610c6a565b3480156103bc57600080fd5b506103596103cb366004611682565b610cc3565b3480156103dc57600080fd5b50610273610cfd565b3480156103f157600080fd5b5061023c610400366004611682565b610d0c565b34801561041157600080fd5b5061023c610420366004611508565b610d9b565b34801561043157600080fd5b5061023c610440366004611682565b610ea7565b60096020526000908152604090205481565b6001546001600160a01b0316331461048a5760405162461bcd60e51b8152600401610481906117f6565b60405180910390fd5b806104968460016119ff565b146104b35760405162461bcd60e51b8152600401610481906117bf565b600081815b81811015610513578484828181106104e057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906104f591906116b2565b6104ff9084611a17565b92508061050b81611ac1565b9150506104b8565b506008805463ffffffff191663ffffffff84161790556105356006878761132b565b506105426007858561139b565b50505050505050565b6002546001600160a01b031633146105755760405162461bcd60e51b8152600401610481906117f6565b600280546001805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba56906105d790339061171e565b60405180910390a1565b600681815481106105f157600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600054141561062e5760405162461bcd60e51b815260040161048190611955565b60026000556106486001600160a01b038316333084610f35565b7fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda8282604051610679929190611770565b60405180910390a150506001600055565b600260005414156106ad5760405162461bcd60e51b815260040161048190611955565b60026000556001546001600160a01b031633146106dc5760405162461bcd60e51b8152600401610481906117f6565b60085460065463ffffffff90911690479060005b818110156107d0576000846007838154811061071c57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600882040154610748916007166004026101000a900463ffffffff1686611a5f565b6107529190611a3f565b905080156107bd576006828154811061077b57634e487b7160e01b600052603260045260246000fd5b60009182526020822001546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156107bb573d6000803e3d6000fd5b505b50806107c881611ac1565b9150506106f0565b50479150811561084457600560009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561082a57600080fd5b505af115801561083e573d6000803e3d6000fd5b50505050505b5050600160005550565b600260005414156108715760405162461bcd60e51b815260040161048190611955565b6002600081905550610884336000610fc0565b6001600055565b6005546001600160a01b031681565b600260005414156108bd5760405162461bcd60e51b815260040161048190611955565b60026000556003546040805163ab3dbf3b60e01b815290516001600160a01b039092169163ab3dbf3b91600480820192602092909190829003018186803b15801561090757600080fd5b505afa15801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f91906114c1565b6001600160a01b0316639350c4de336040518263ffffffff1660e01b815260040161096a919061171e565b60206040518083038186803b15801561098257600080fd5b505afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba91906115b2565b6109d65760405162461bcd60e51b81526004016104819061188a565b6109e08282610fc0565b50506001600055565b7f44863bc9b335caf97ca3a3ab6fb67776965a88292ed53b0679f8eae4a67b630c346040516105d791906119e5565b6001546001600160a01b031681565b6001546001600160a01b03163314610a515760405162461bcd60e51b8152600401610481906117f6565b602083015160048054604051636eb1769f60e11b81526c0100000000000000000000000090930492839286926001600160a01b038086169363dd62ed3e93610a9d933093169101611732565b60206040518083038186803b158015610ab557600080fd5b505afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed919061169a565b1015610b7b576004805460405163095ea7b360e01b81526001600160a01b038085169363095ea7b393610b27939216916000199101611770565b602060405180830381600087803b158015610b4157600080fd5b505af1158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7991906115b2565b505b600480546040805160a08101825288815230602082015242818301526060810188905260808101879052905163c04b8d5960e01b81526001600160a01b039092169263c04b8d5992610bce92910161198c565b602060405180830381600087803b158015610be857600080fd5b505af1158015610bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c20919061169a565b505050505050565b6003546001600160a01b031681565b60085463ffffffff1681565b6002546001600160a01b031681565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6001546001600160a01b03163314610c945760405162461bcd60e51b8152600401610481906117f6565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60078181548110610cd357600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6004546001600160a01b031681565b6001546001600160a01b03163314610d365760405162461bcd60e51b8152600401610481906117f6565b600554604051632e1a7d4d60e01b81526001600160a01b0390911690632e1a7d4d90610d669084906004016119e5565b600060405180830381600087803b158015610d8057600080fd5b505af1158015610d94573d6000803e3d6000fd5b5050505050565b60026000541415610dbe5760405162461bcd60e51b815260040161048190611955565b60026000556001546001600160a01b03163314610ded5760405162461bcd60e51b8152600401610481906117f6565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610e4e576040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610e48573d6000803e3d6000fd5b50610e62565b610e626001600160a01b0384168284611149565b7f2218cddb1955a67c82803a8156a8d52c819e2d3e932801b0556f01c96faaa712838383604051610e9593929190611789565b60405180910390a15050600160005550565b6001546001600160a01b03163314610ed15760405162461bcd60e51b8152600401610481906117f6565b600560009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610f2157600080fd5b505af1158015610c20573d6000803e3d6000fd5b610fba846323b872dd60e01b858585604051602401610f569392919061174c565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261116d565b50505050565b6001600160a01b038216600090815260096020526040902054610fe390826119ff565b905080610fef57611145565b804710156110e65760006110034783611a7e565b6005546040516370a0823160e01b81529192506001600160a01b031690632e1a7d4d906110969083906370a082319061104090309060040161171e565b60206040518083038186803b15801561105857600080fd5b505afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611090919061169a565b846111fc565b6040518263ffffffff1660e01b81526004016110b291906119e5565b600060405180830381600087803b1580156110cc57600080fd5b505af11580156110e0573d6000803e3d6000fd5b50505050505b60006110f247836111fc565b90506110fe8183611a7e565b6001600160a01b038416600081815260096020526040808220939093559151909183156108fc02918491818181858888f19350505050158015610fba573d6000803e3d6000fd5b5050565b6111688363a9059cbb60e01b8484604051602401610f56929190611770565b505050565b60006111c2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112159092919063ffffffff16565b80519091501561116857808060200190518101906111e091906115b2565b6111685760405162461bcd60e51b8152600401610481906118f8565b60008183111561120c578161120e565b825b9392505050565b6060611224848460008561122c565b949350505050565b60608247101561124e5760405162461bcd60e51b81526004016104819061182d565b611257856112ec565b6112735760405162461bcd60e51b8152600401610481906118c1565b600080866001600160a01b0316858760405161128f9190611702565b60006040518083038185875af1925050503d80600081146112cc576040519150601f19603f3d011682016040523d82523d6000602084013e6112d1565b606091505b50915091506112e18282866112f2565b979650505050505050565b3b151590565b6060831561130157508161120e565b8251156113115782518084602001fd5b8160405162461bcd60e51b815260040161048191906117ac565b82805482825590600052602060002090810192821561138b579160200282015b8281111561138b57815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384351617825560209092019160019091019061134b565b50611397929150611447565b5090565b8280548282559060005260206000209060070160089004810192821561138b5791602002820160005b8382111561140e57833563ffffffff1683826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026113c4565b801561143e5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261140e565b50506113979291505b5b808211156113975760008155600101611448565b60008083601f84011261146d578081fd5b50813567ffffffffffffffff811115611484578182fd5b602083019150836020808302850101111561149e57600080fd5b9250929050565b6000602082840312156114b6578081fd5b813561120e81611b08565b6000602082840312156114d2578081fd5b815161120e81611b08565b600080604083850312156114ef578081fd5b82356114fa81611b08565b946020939093013593505050565b60008060006060848603121561151c578081fd5b833561152781611b08565b925060208401359150604084013561153e81611b08565b809150509250925092565b6000806000806040858703121561155e578081fd5b843567ffffffffffffffff80821115611575578283fd5b6115818883890161145c565b90965094506020870135915080821115611599578283fd5b506115a68782880161145c565b95989497509550505050565b6000602082840312156115c3578081fd5b8151801515811461120e578182fd5b6000806000606084860312156115e6578283fd5b833567ffffffffffffffff808211156115fd578485fd5b818601915086601f830112611610578485fd5b813560208282111561162457611624611af2565b604051601f8301601f191681018201848111828210171561164757611647611af2565b60405282815284830182018a101561165d578788fd5b8282860183830137918201810196909652979486013596505050604090930135925050565b600060208284031215611693578081fd5b5035919050565b6000602082840312156116ab578081fd5b5051919050565b6000602082840312156116c3578081fd5b813563ffffffff8116811461120e578182fd5b600081518084526116ee816020860160208601611a95565b601f01601f19169290920160200192915050565b60008251611714818460208701611a95565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60006020825261120e60208301846116d6565b6020808252600f908201527f6c656e677468206d69736d617463680000000000000000000000000000000000604082015260600190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526008908201527f2170726f64756374000000000000000000000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600060208252825160a060208401526119a860c08401826116d6565b90506001600160a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b90815260200190565b63ffffffff91909116815260200190565b60008219821115611a1257611a12611adc565b500190565b600063ffffffff808316818516808303821115611a3657611a36611adc565b01949350505050565b600082611a5a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611a7957611a79611adc565b500290565b600082821015611a9057611a90611adc565b500390565b60005b83811015611ab0578181015183820152602001611a98565b83811115610fba5750506000910152565b6000600019821415611ad557611ad5611adc565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611b1d57600080fd5b5056fea26469706673582212202f7ffa91a08807323aecc24bafb78b5d6de4e826c8c9e3cba8022fafb66ba47d64736f6c63430008000033";
