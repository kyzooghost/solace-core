/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ClaimsEscrow } from "./ClaimsEscrow";

export class ClaimsEscrowFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _registry: string,
    overrides?: Overrides
  ): Promise<ClaimsEscrow> {
    return super.deploy(
      _governance,
      _registry,
      overrides || {}
    ) as Promise<ClaimsEscrow>;
  }
  getDeployTransaction(
    _governance: string,
    _registry: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, _registry, overrides || {});
  }
  attach(address: string): ClaimsEscrow {
    return super.attach(address) as ClaimsEscrow;
  }
  connect(signer: Signer): ClaimsEscrowFactory {
    return super.connect(signer) as ClaimsEscrowFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimsEscrow {
    return new Contract(address, _abi, signerOrProvider) as ClaimsEscrow;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "adjustClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "address",
        name: "claimant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimant",
        type: "address",
      },
    ],
    name: "receiveClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    name: "withdrawClaimsPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dec380380610dec83398101604081905261002f91610082565b600080546001600160a01b039384166001600160a01b031991821617825560038054939094169216919091179091556002556100b4565b80516001600160a01b038116811461007d57600080fd5b919050565b60008060408385031215610094578182fd5b61009d83610066565b91506100ab60208401610066565b90509250929050565b610d29806100c36000396000f3fe6080604052600436106100cb5760003560e01c8063963063f411610074578063ab033ea91161004e578063ab033ea9146101d7578063dc2c256f146101f7578063ea0aa89614610217576100d2565b8063963063f414610180578063a734f06e14610193578063a888c2cd146101a8576100d2565b80635aa6e675116100a55780635aa6e675146101345780637b103999146101565780638b85cc7e1461016b576100d2565b8063238efcbc146100d45780633cb42ee5146100e957806341c6138314610109576100d2565b366100d257005b005b3480156100e057600080fd5b506100d2610237565b3480156100f557600080fd5b506100d2610104366004610997565b6102c9565b34801561011557600080fd5b5061011e610336565b60405161012b9190610c59565b60405180910390f35b34801561014057600080fd5b5061014961033c565b60405161012b91906109d4565b34801561016257600080fd5b5061014961034b565b34801561017757600080fd5b5061014961035a565b61011e61018e3660046108e6565b610369565b34801561019f57600080fd5b50610149610489565b3480156101b457600080fd5b506101c86101c336600461097f565b6104a1565b60405161012b93929190610a01565b3480156101e357600080fd5b506100d26101f23660046108e6565b6104cc565b34801561020357600080fd5b506100d261021236600461091e565b610518565b34801561022357600080fd5b506100d261023236600461097f565b6105bc565b6001546001600160a01b0316331461026a5760405162461bcd60e51b815260040161026190610a55565b60405180910390fd5b60018054600080546001600160a01b03199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba56906102bf9033906109d4565b60405180910390a1565b6000546001600160a01b031633146102f35760405162461bcd60e51b815260040161026190610a55565b6000828152600460205260409020600201546103215760405162461bcd60e51b815260040161026190610ac3565b60009182526004602052604090912060010155565b60025481565b6000546001600160a01b031681565b6003546001600160a01b031681565b6001546001600160a01b031681565b6003546040805163fbfa77cf60e01b815290516000926001600160a01b03169163fbfa77cf916004808301926020929190829003018186803b1580156103ae57600080fd5b505afa1580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e69190610902565b6001600160a01b0316336001600160a01b0316146104165760405162461bcd60e51b815260040161026190610b57565b60026000815461042590610caa565b9182905550604080516060810182526001600160a01b0394851681523460208083019182524283850190815260008681526004909252939020915182546001600160a01b031916961695909517815593516001850155516002909301929092555090565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6004602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b6000546001600160a01b031633146104f65760405162461bcd60e51b815260040161026190610a55565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105425760405162461bcd60e51b815260040161026190610a55565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156105a3576040516001600160a01b0382169083156108fc029084906000818181858888f1935050505015801561059d573d6000803e3d6000fd5b506105b7565b6105b76001600160a01b03841682846106c1565b505050565b6000818152600460205260409020546001600160a01b031633146105f25760405162461bcd60e51b815260040161026190610a8c565b600081815260046020526040902060020154610612906212750090610c62565b4210156106315760405162461bcd60e51b815260040161026190610b8e565b60008181526004602052604080822060018101805482546001600160a01b031916835590849055600290910183905590519091339183156108fc0291849190818181858888f1935050505015801561068d573d6000803e3d6000fd5b506040518190339084907f98131a469190deca66117f3768bba4328c631613211a3cc4054efc6ee16cd42690600090a45050565b6105b78363a9059cbb60e01b84846040516024016106e09291906109e8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526000610794826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ce9092919063ffffffff16565b8051909150156105b757808060200190518101906107b2919061095f565b6105b75760405162461bcd60e51b815260040161026190610bfc565b60606107dd84846000856107e7565b90505b9392505050565b6060824710156108095760405162461bcd60e51b815260040161026190610afa565b610812856108a7565b61082e5760405162461bcd60e51b815260040161026190610bc5565b600080866001600160a01b0316858760405161084a91906109b8565b60006040518083038185875af1925050503d8060008114610887576040519150601f19603f3d011682016040523d82523d6000602084013e61088c565b606091505b509150915061089c8282866108ad565b979650505050505050565b3b151590565b606083156108bc5750816107e0565b8251156108cc5782518084602001fd5b8160405162461bcd60e51b81526004016102619190610a22565b6000602082840312156108f7578081fd5b81356107e081610cdb565b600060208284031215610913578081fd5b81516107e081610cdb565b600080600060608486031215610932578182fd5b833561093d81610cdb565b925060208401359150604084013561095481610cdb565b809150509250925092565b600060208284031215610970578081fd5b815180151581146107e0578182fd5b600060208284031215610990578081fd5b5035919050565b600080604083850312156109a9578182fd5b50508035926020909101359150565b600082516109ca818460208701610c7a565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6000602082528251806020840152610a41816040850160208701610c7a565b601f01601f19169190910160400192915050565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f21636c61696d616e740000000000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f636c61696d20646e650000000000000000000000000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526006908201527f217661756c740000000000000000000000000000000000000000000000000000604082015260600190565b6020808252601f908201527f636f6f6c646f776e20706572696f6420686173206e6f7420656c617073656400604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60008219821115610c7557610c75610cc5565b500190565b60005b83811015610c95578181015183820152602001610c7d565b83811115610ca4576000848401525b50505050565b6000600019821415610cbe57610cbe610cc5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610cf057600080fd5b5056fea264697066735822122026dcd67f3e605af47dd1ac8bfedf3d696ebeb680e060d7715caac36d48c53ff764736f6c63430008000033";
