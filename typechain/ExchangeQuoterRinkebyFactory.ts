/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ExchangeQuoterRinkeby } from "./ExchangeQuoterRinkeby";

export class ExchangeQuoterRinkebyFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    overrides?: Overrides
  ): Promise<ExchangeQuoterRinkeby> {
    return super.deploy(
      _governance,
      overrides || {}
    ) as Promise<ExchangeQuoterRinkeby>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): ExchangeQuoterRinkeby {
    return super.attach(address) as ExchangeQuoterRinkeby;
  }
  connect(signer: Signer): ExchangeQuoterRinkebyFactory {
    return super.connect(signer) as ExchangeQuoterRinkebyFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeQuoterRinkeby {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExchangeQuoterRinkeby;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_rates",
        type: "uint256[]",
      },
    ],
    name: "setRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "tokenToEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106b73803806106b783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610626806100916000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80635aa6e675116100505780635aa6e675146100aa5780638b85cc7e146100bf578063a8734f0b146100c757610067565b8063258b7ca41461006c578063468fb00614610095575b600080fd5b61007f61007a36600461032b565b6100da565b60405161008c9190610460565b60405180910390f35b6100a86100a3366004610354565b61018c565b005b6100b261027c565b60405161008c91906103de565b6100b261028b565b61007f6100d5366004610311565b61029a565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561011557600080fd5b505afa158015610129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014d91906103bd565b61015890600a6104cf565b6001600160a01b03841660009081526002602052604090205461017b90846105a0565b6101859190610469565b9392505050565b6000546001600160a01b031633146101bf5760405162461bcd60e51b81526004016101b6906103f2565b60405180910390fd5b828181146101df5760405162461bcd60e51b81526004016101b690610429565b60005b818110156102745783838281811061020a57634e487b7160e01b600052603260045260246000fd5b905060200201356002600088888581811061023557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061024a9190610311565b6001600160a01b0316815260208101919091526040016000205561026d816105bf565b90506101e2565b505050505050565b6000546001600160a01b031681565b6001546001600160a01b031681565b60026020526000908152604090205481565b80356001600160a01b03811681146102c357600080fd5b919050565b60008083601f8401126102d9578182fd5b50813567ffffffffffffffff8111156102f0578182fd5b602083019150836020808302850101111561030a57600080fd5b9250929050565b600060208284031215610322578081fd5b610185826102ac565b6000806040838503121561033d578081fd5b610346836102ac565b946020939093013593505050565b60008060008060408587031215610369578182fd5b843567ffffffffffffffff80821115610380578384fd5b61038c888389016102c8565b909650945060208701359150808211156103a4578384fd5b506103b1878288016102c8565b95989497509550505050565b6000602082840312156103ce578081fd5b815160ff81168114610185578182fd5b6001600160a01b0391909116815260200190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f756e657175616c206c656e677468730000000000000000000000000000000000604082015260600190565b90815260200190565b60008261048457634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161049b57506104c6565b8187048211156104ad576104ad6105da565b808616156104ba57918102915b9490941c93800261048c565b94509492505050565b600061018560001960ff8516846000826104eb57506001610185565b816104f857506000610185565b816001811461050e576002811461051857610545565b6001915050610185565b60ff841115610529576105296105da565b6001841b91508482111561053f5761053f6105da565b50610185565b5060208310610133831016604e8410600b8410161715610578575081810a83811115610573576105736105da565b610185565b6105858484846001610489565b808604821115610597576105976105da565b02949350505050565b60008160001904831182151516156105ba576105ba6105da565b500290565b60006000198214156105d3576105d36105da565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220494028ce2002cd2a7edbe75948d35b5bed89b9e08ce6d21bfa03f192dfb24f8664736f6c63430008000033";
