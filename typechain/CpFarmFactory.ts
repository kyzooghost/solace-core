/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CpFarm } from "./CpFarm";

export class CpFarmFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _master: string,
    _vault: string,
    _rewardToken: string,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): Promise<CpFarm> {
    return super.deploy(
      _master,
      _vault,
      _rewardToken,
      _startBlock,
      _endBlock,
      overrides || {}
    ) as Promise<CpFarm>;
  }
  getDeployTransaction(
    _master: string,
    _vault: string,
    _rewardToken: string,
    _startBlock: BigNumberish,
    _endBlock: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _master,
      _vault,
      _rewardToken,
      _startBlock,
      _endBlock,
      overrides || {}
    );
  }
  attach(address: string): CpFarm {
    return super.attach(address) as CpFarm;
  }
  connect(signer: Signer): CpFarmFactory {
    return super.connect(signer) as CpFarmFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CpFarm {
    return new Contract(address, _abi, signerOrProvider) as CpFarm;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositCp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositEth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithdrawCp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithdrawEth",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "accRewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositCp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "farmType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRewardBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
    ],
    name: "setEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockReward",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unpaidRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "valueStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawCp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxLoss",
        type: "uint256",
      },
    ],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260016000553480156200001657600080fd5b50604051620014cc380380620014cc833981016040819052620000399162000100565b600c80546001600160a01b03199081166001600160a01b038881169190911790925560028054821687841690811790915560018054831690911790556003805490911691851691909117905560058290556006819055620000a74383620000c8602090811b62000c9b17901c565b6007555050600b80546001600160a01b03191633179055506200015c915050565b600081831015620000da5781620000dc565b825b9392505050565b80516001600160a01b0381168114620000fb57600080fd5b919050565b600080600080600060a0868803121562000118578081fd5b6200012386620000e3565b94506200013360208701620000e3565b93506200014360408701620000e3565b6060870151608090970151959894975095949392505050565b611360806200016c6000396000f3fe60806040526004361061018f5760003560e01c80638dbb1e3a116100d6578063c7a29c6f1161007f578063f54ca63c11610059578063f54ca63c1461040b578063f7c618c114610420578063fbfa77cf14610435576101b0565b8063c7a29c6f146103c1578063c7b8981c146103e1578063ee97f7f3146103f6576101b0565b80639fe27a50116100b05780639fe27a501461036c578063a9f8d1811461038c578063ab033ea9146103a1576101b0565b80638dbb1e3a14610317578063939d6237146103375780639c99e2b91461034c576101b0565b806348cd4cb1116101385780635aa6e675116101125780635aa6e675146102cd5780636ae5b46a146102e25780637f498ffc146102f7576101b0565b806348cd4cb11461027657806351ed6a301461028b57806359efce46146102ad576101b0565b80632ebed9ec116101695780632ebed9ec1461023957806331d7a2621461024e578063439370b11461026e576101b0565b8063083c6323146101ca5780630ac168a1146101f55780631959a0021461020a576101b0565b366101b0576001546001600160a01b031633146101ae576101ae61044a565b005b6001546001600160a01b031633146101ae576101ae61044a565b3480156101d657600080fd5b506101df610671565b6040516101ec919061124d565b60405180910390f35b34801561020157600080fd5b506101df610677565b34801561021657600080fd5b5061022a610225366004611013565b61067d565b6040516101ec93929190611264565b34801561024557600080fd5b506101df61069e565b34801561025a57600080fd5b506101df610269366004611013565b6106a4565b6101ae610755565b34801561028257600080fd5b506101df61075f565b34801561029757600080fd5b506102a0610765565b6040516101ec91906110c7565b3480156102b957600080fd5b506101ae6102c836600461105a565b610774565b3480156102d957600080fd5b506102a061083c565b3480156102ee57600080fd5b506101df61084b565b34801561030357600080fd5b506101ae61031236600461105a565b610851565b34801561032357600080fd5b506101df61033236600461108a565b610891565b34801561034357600080fd5b506101df6108e7565b34801561035857600080fd5b506101ae61036736600461108a565b6108ed565b34801561037857600080fd5b506101ae61038736600461105a565b610a58565b34801561039857600080fd5b506101df610b0f565b3480156103ad57600080fd5b506101ae6103bc366004611013565b610b15565b3480156103cd57600080fd5b506101ae6103dc36600461105a565b610b79565b3480156103ed57600080fd5b506101ae610bb0565b34801561040257600080fd5b506102a0610bee565b34801561041757600080fd5b506101ae610bfd565b34801561042c57600080fd5b506102a0610c7d565b34801561044157600080fd5b506102a0610c8c565b610452610cb4565b336000908152600a602052604080822060015491516370a0823160e01b81529092916001600160a01b0316906370a08231906104929030906004016110c7565b60206040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e29190611072565b9050600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561053457600080fd5b505af1158015610548573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152600094508593506001600160a01b0390911691506370a08231906105829030906004016110c7565b60206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190611072565b6105dc91906112d1565b905080600960008282546105f0919061127a565b909155505082548190849060009061060990849061127a565b9091555050600854835464e8d4a5100091610623916112b2565b61062d9190611292565b600184015560405133907f7034bb05cfe54b0d147fc0574ed166101e7f0313eb404e113974fbe2a998ca839061066490349061124d565b60405180910390a2505050565b60065481565b60045481565b600a6020526000908152604090208054600182015460029092015490919083565b60005481565b6001600160a01b0381166000908152600a60205260408120600854600754431180156106d1575060095415155b156107115760006106e460075443610891565b6009549091506106f98264e8d4a510006112b2565b6107039190611292565b61070d908361127a565b9150505b60028201546001830154835464e8d4a510009061072f9085906112b2565b6107399190611292565b61074391906112d1565b61074d919061127a565b949350505050565b61075d61044a565b565b60055481565b6002546001600160a01b031681565b61077c610cb4565b336000908152600a60205260408120600980549192849261079e9084906112d1565b90915550508054829082906000906107b79084906112d1565b9091555050600854815464e8d4a51000916107d1916112b2565b6107db9190611292565b60018201556002546107f7906001600160a01b03163384610de4565b336001600160a01b03167fcc5954c5d719eb6aa8cf5b5af5a4c87dc37edf45cc533f32fa9879fba745fa8783604051610830919061124d565b60405180910390a25050565b600b546001600160a01b031681565b60095481565b600b546001600160a01b031633146108845760405162461bcd60e51b815260040161087b9061114b565b60405180910390fd5b61088c610bfd565b600655565b6000806108a084600554610c9b565b905060006108b084600654610e6c565b9050808211156108c5576000925050506108e1565b6004546108d283836112d1565b6108dc91906112b2565b925050505b92915050565b60085481565b6108f5610cb4565b336000908152600a6020526040812060098054919285926109179084906112d1565b90915550508054839082906000906109309084906112d1565b9091555050600854815464e8d4a510009161094a916112b2565b6109549190611292565b60018083019190915554604051630441a3e760e41b81526000916001600160a01b03169063441a3e709061098e9087908790600401611256565b602060405180830381600087803b1580156109a857600080fd5b505af11580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e09190611072565b604051909150339082156108fc029083906000818181858888f19350505050158015610a10573d6000803e3d6000fd5b50336001600160a01b03167fccbd99ba6da8f29b2a4f65e474e3c3973564d356c162c08d45f3dc7f0cb5b3aa85604051610a4a919061124d565b60405180910390a250505050565b610a60610cb4565b336000818152600a602052604090206002549091610a89916001600160a01b0316903085610e7b565b8160096000828254610a9b919061127a565b9091555050805482908290600090610ab490849061127a565b9091555050600854815464e8d4a5100091610ace916112b2565b610ad89190611292565b600182015560405133907f432f209288a77573648a2d1611054bc155dbd7814b48976ad23334e037c55dfe9061083090859061124d565b60075481565b600b546001600160a01b03163314610b3f5760405162461bcd60e51b815260040161087b9061114b565b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600c546001600160a01b03163314610ba35760405162461bcd60e51b815260040161087b90611216565b610bab610bfd565b600455565b610bb8610cb4565b336000908152600a60205260409020600854815464e8d4a5100091610bdc916112b2565b610be69190611292565b600190910155565b600c546001600160a01b031681565b6007544311610c0b5761075d565b600954610c2657610c1e43600654610e6c565b60075561075d565b6000610c3460075443610891565b600954909150610c498264e8d4a510006112b2565b610c539190611292565b60086000828254610c64919061127a565b92505081905550610c7743600654610e6c565b60075550565b6003546001600160a01b031681565b6001546001600160a01b031681565b600081831015610cab5781610cad565b825b9392505050565b610cbc610bfd565b336000908152600a6020526040812060028101546001820154600854835493949364e8d4a5100091610ced916112b2565b610cf79190611292565b610d0191906112d1565b610d0b919061127a565b905080610d1957505061075d565b600354600c546040516370a0823160e01b81526000926001600160a01b03908116926370a0823192610d5192909116906004016110c7565b60206040518083038186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190611072565b90506000610daf8383610e6c565b9050610dbb81846112d1565b6002850155600c54600354610dde916001600160a01b0391821691163384610e7b565b50505050565b610e678363a9059cbb60e01b8484604051602401610e039291906110ff565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e9c565b505050565b6000818310610cab5781610cad565b610dde846323b872dd60e01b858585604051602401610e03939291906110db565b6000610ef1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f2b9092919063ffffffff16565b805190915015610e675780806020019051810190610f0f919061103a565b610e675760405162461bcd60e51b815260040161087b906111b9565b606061074d848460008585610f3f85610fd4565b610f5b5760405162461bcd60e51b815260040161087b90611182565b600080866001600160a01b03168587604051610f7791906110ab565b60006040518083038185875af1925050503d8060008114610fb4576040519150601f19603f3d011682016040523d82523d6000602084013e610fb9565b606091505b5091509150610fc9828286610fda565b979650505050505050565b3b151590565b60608315610fe9575081610cad565b825115610ff95782518084602001fd5b8160405162461bcd60e51b815260040161087b9190611118565b600060208284031215611024578081fd5b81356001600160a01b0381168114610cad578182fd5b60006020828403121561104b578081fd5b81518015158114610cad578182fd5b60006020828403121561106b578081fd5b5035919050565b600060208284031215611083578081fd5b5051919050565b6000806040838503121561109c578081fd5b50508035926020909101359150565b600082516110bd8184602087016112e8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526111378160408501602087016112e8565b601f01601f19169190910160400192915050565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526007908201527f216d617374657200000000000000000000000000000000000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b6000821982111561128d5761128d611314565b500190565b6000826112ad57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156112cc576112cc611314565b500290565b6000828210156112e3576112e3611314565b500390565b60005b838110156113035781810151838201526020016112eb565b83811115610dde5750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122087f2221ed15431a80a59ef8cfc2c23a0a07afa6aea9c2cbc44e6ab1147e357f064736f6c63430008000033";
