/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Registry } from "./Registry";

export class RegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_governance: string, overrides?: Overrides): Promise<Registry> {
    return super.deploy(_governance, overrides || {}) as Promise<Registry>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): RegistryFactory {
    return super.connect(signer) as RegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimsEscrow",
        type: "address",
      },
    ],
    name: "ClaimsEscrowSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_locker",
        type: "address",
      },
    ],
    name: "LockerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    name: "MasterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_policyManager",
        type: "address",
      },
    ],
    name: "PolicyManagerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_solace",
        type: "address",
      },
    ],
    name: "SolaceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "TreasurySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "VaultSet",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimsEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimsEscrow",
        type: "address",
      },
    ],
    name: "setClaimsEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_locker",
        type: "address",
      },
    ],
    name: "setLocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    name: "setMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policyManager",
        type: "address",
      },
    ],
    name: "setPolicyManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_solace",
        type: "address",
      },
    ],
    name: "setSolace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "solace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081e38038061081e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61078d806100916000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063ab3dbf3b116100b2578063e4d974c211610081578063efbd742f11610066578063efbd742f1461020d578063f0f4426014610220578063fbfa77cf1461023357610136565b8063e4d974c2146101fd578063ee97f7f31461020557610136565b8063ab3dbf3b146101c7578063ac45bf53146101cf578063adde41e1146101e2578063d7b96d4e146101f557610136565b80635aa6e675116101095780636817031b116100ee5780636817031b146101995780638b85cc7e146101ac578063ab033ea9146101b457610136565b80635aa6e6751461018957806361d027b31461019157610136565b8063171060ec1461013b578063238efcbc1461015057806326fae0d3146101585780633ef8d97e1461016b575b600080fd5b61014e6101493660046106de565b61023b565b005b61014e6102c4565b61014e6101663660046106de565b61034d565b6101736103c2565b604051610180919061070c565b60405180910390f35b6101736103d1565b6101736103e0565b61014e6101a73660046106de565b6103ef565b610173610464565b61014e6101c23660046106de565b610473565b6101736104bf565b61014e6101dd3660046106de565b6104ce565b61014e6101f03660046106de565b610543565b6101736105b8565b6101736105c7565b6101736105d6565b61014e61021b3660046106de565b6105e5565b61014e61022e3660046106de565b61065a565b6101736106cf565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161026590610720565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0383161790556040517fef7ce00901486d0ae4bbe00a818eb6bb2f42bc78fc75571cf294c1c50c61adfd906102b990839061070c565b60405180910390a150565b6001546001600160a01b031633146102ee5760405162461bcd60e51b815260040161026590610720565b60018054600080546001600160a01b03199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba569061034390339061070c565b60405180910390a1565b6000546001600160a01b031633146103775760405162461bcd60e51b815260040161026590610720565b600380546001600160a01b0319166001600160a01b0383161790556040517f394cfde23f242c0bdfd85485626efd062625be743888c5254471e32f8b2c3db1906102b990839061070c565b6002546001600160a01b031681565b6000546001600160a01b031681565b6005546001600160a01b031681565b6000546001600160a01b031633146104195760405162461bcd60e51b815260040161026590610720565b600480546001600160a01b0319166001600160a01b0383161790556040517fe7ae49f883c825b05681b3e00e8be6fdea9ed2a8a45e4c6ecb9390fc44cce615906102b990839061070c565b6001546001600160a01b031681565b6000546001600160a01b0316331461049d5760405162461bcd60e51b815260040161026590610720565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6008546001600160a01b031681565b6000546001600160a01b031633146104f85760405162461bcd60e51b815260040161026590610720565b600780546001600160a01b0319166001600160a01b0383161790556040517facd467a5dfdbe3785babbdacf3edc0c6ccc24bab716476b5f8422b51aad726f8906102b990839061070c565b6000546001600160a01b0316331461056d5760405162461bcd60e51b815260040161026590610720565b600880546001600160a01b0319166001600160a01b0383161790556040517f7459f7f9aac6fc4ca8cf3734456a89022a8afccd59e1789f17777ec2012f21ed906102b990839061070c565b6006546001600160a01b031681565b6007546001600160a01b031681565b6003546001600160a01b031681565b6000546001600160a01b0316331461060f5760405162461bcd60e51b815260040161026590610720565b600280546001600160a01b0319166001600160a01b0383161790556040517f53b46c46570dad0d268e5d06d24322a4b421651c520d18471d9d67b1ab11c60c906102b990839061070c565b6000546001600160a01b031633146106845760405162461bcd60e51b815260040161026590610720565b600580546001600160a01b0319166001600160a01b0383161790556040517f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f906102b990839061070c565b6004546001600160a01b031681565b6000602082840312156106ef578081fd5b81356001600160a01b0381168114610705578182fd5b9392505050565b6001600160a01b0391909116815260200190565b6020808252600b908201527f21676f7665726e616e636500000000000000000000000000000000000000000060408201526060019056fea2646970667358221220716f71e67a8d23755a10346a6ac59a27ce604f1020616bac3cfe8c533d71eea264736f6c63430008000033";
