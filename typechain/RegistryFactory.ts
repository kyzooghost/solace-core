/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Registry } from "./Registry";

export class RegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_governance: string, overrides?: Overrides): Promise<Registry> {
    return super.deploy(_governance, overrides || {}) as Promise<Registry>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): RegistryFactory {
    return super.connect(signer) as RegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimsAdjustor",
        type: "address",
      },
    ],
    name: "ClaimsAdjustorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimsEscrow",
        type: "address",
      },
    ],
    name: "ClaimsEscrowSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_locker",
        type: "address",
      },
    ],
    name: "LockerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    name: "MasterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "ProductAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "ProductRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_solace",
        type: "address",
      },
    ],
    name: "SolaceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "TreasurySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "VaultSet",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimsAdjustor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimsEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productNum",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "isProduct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numProducts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "removeProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimsAdjustor",
        type: "address",
      },
    ],
    name: "setClaimsAdjustor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimsEscrow",
        type: "address",
      },
    ],
    name: "setClaimsEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_locker",
        type: "address",
      },
    ],
    name: "setLocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    name: "setMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_solace",
        type: "address",
      },
    ],
    name: "setSolace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "solace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c9b380380610c9b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610c0a806100916000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80638b85cc7e116100e3578063e4d974c21161008c578063f0f4426011610066578063f0f44260146102d2578063f44a6ca9146102e5578063fbfa77cf146102f85761018d565b8063e4d974c2146102af578063ee97f7f3146102b7578063efbd742f146102bf5761018d565b8063ac964f21116100bd578063ac964f211461027f578063b9db15b414610294578063d7b96d4e146102a75761018d565b80638b85cc7e14610251578063ab033ea914610259578063ac45bf531461026c5761018d565b80635aa6e675116101455780636817031b1161011f5780636817031b1461020b578063787b67251461021e5780637fd29192146102315761018d565b80635aa6e675146101f357806361aeb149146101fb57806361d027b3146102035761018d565b806326fae0d31161017657806326fae0d3146101af578063354703d6146101c25780633ef8d97e146101d55761018d565b8063171060ec14610192578063238efcbc146101a7575b600080fd5b6101a56101a0366004610ad1565b610300565b005b6101a5610389565b6101a56101bd366004610ad1565b610412565b6101a56101d0366004610ad1565b610487565b6101dd6104fc565b6040516101ea9190610b10565b60405180910390f35b6101dd61050b565b6101dd61051a565b6101dd610529565b6101a5610219366004610ad1565b610538565b6101a561022c366004610ad1565b6105ad565b61024461023f366004610ad1565b610612565b6040516101ea9190610b24565b6101dd610625565b6101a5610267366004610ad1565b610634565b6101a561027a366004610ad1565b610680565b6102876106f5565b6040516101ea9190610ba8565b6101dd6102a2366004610af8565b610706565b6101dd610713565b6101dd610722565b6101dd610731565b6101a56102cd366004610ad1565b610740565b6101a56102e0366004610ad1565b6107b5565b6101a56102f3366004610ad1565b61082a565b6101dd61088f565b6000546001600160a01b031633146103335760405162461bcd60e51b815260040161032a90610b71565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0383161790556040517fef7ce00901486d0ae4bbe00a818eb6bb2f42bc78fc75571cf294c1c50c61adfd9061037e908390610b10565b60405180910390a150565b6001546001600160a01b031633146103b35760405162461bcd60e51b815260040161032a90610b71565b60018054600080546001600160a01b03199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba5690610408903390610b10565b60405180910390a1565b6000546001600160a01b0316331461043c5760405162461bcd60e51b815260040161032a90610b71565b600380546001600160a01b0319166001600160a01b0383161790556040517f394cfde23f242c0bdfd85485626efd062625be743888c5254471e32f8b2c3db19061037e908390610b10565b6000546001600160a01b031633146104b15760405162461bcd60e51b815260040161032a90610b71565b600780546001600160a01b0319166001600160a01b0383161790556040517f381afcd224056f8f11a6b97a2378fcbb4d13407faa686d740626393fc322b92e9061037e908390610b10565b6002546001600160a01b031681565b6000546001600160a01b031681565b6007546001600160a01b031681565b6005546001600160a01b031681565b6000546001600160a01b031633146105625760405162461bcd60e51b815260040161032a90610b71565b600480546001600160a01b0319166001600160a01b0383161790556040517fe7ae49f883c825b05681b3e00e8be6fdea9ed2a8a45e4c6ecb9390fc44cce6159061037e908390610b10565b6000546001600160a01b031633146105d75760405162461bcd60e51b815260040161032a90610b71565b6105e260098261089e565b507fbcfcd682fb30ef99771fd0e6a263238ad5336a768db67bb9d3387807c02e43e58160405161037e9190610b10565b600061061f6009836108ba565b92915050565b6001546001600160a01b031681565b6000546001600160a01b0316331461065e5760405162461bcd60e51b815260040161032a90610b71565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106aa5760405162461bcd60e51b815260040161032a90610b71565b600880546001600160a01b0319166001600160a01b0383161790556040517facd467a5dfdbe3785babbdacf3edc0c6ccc24bab716476b5f8422b51aad726f89061037e908390610b10565b600061070160096108cf565b905090565b600061061f6009836108da565b6006546001600160a01b031681565b6008546001600160a01b031681565b6003546001600160a01b031681565b6000546001600160a01b0316331461076a5760405162461bcd60e51b815260040161032a90610b71565b600280546001600160a01b0319166001600160a01b0383161790556040517f53b46c46570dad0d268e5d06d24322a4b421651c520d18471d9d67b1ab11c60c9061037e908390610b10565b6000546001600160a01b031633146107df5760405162461bcd60e51b815260040161032a90610b71565b600580546001600160a01b0319166001600160a01b0383161790556040517f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f9061037e908390610b10565b6000546001600160a01b031633146108545760405162461bcd60e51b815260040161032a90610b71565b61085f6009826108e6565b507fb47bc51361412ccd13c03ce02cb7481334b4302ac26726397e82e12710c8a3a28160405161037e9190610b10565b6004546001600160a01b031681565b60006108b3836001600160a01b0384166108fb565b9392505050565b60006108b3836001600160a01b038416610a12565b600061061f82610a2a565b60006108b38383610a2e565b60006108b3836001600160a01b038416610a87565b60008181526001830160205260408120548015610a0857600061091f600183610bb1565b855490915060009061093390600190610bb1565b9050600086600001828154811061095a57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061098b57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152600189019091526040902084905586548790806109cc57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061061f565b600091505061061f565b60009081526001919091016020526040902054151590565b5490565b81546000908210610a515760405162461bcd60e51b815260040161032a90610b2f565b826000018281548110610a7457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000610a938383610a12565b610ac95750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561061f565b50600061061f565b600060208284031215610ae2578081fd5b81356001600160a01b03811681146108b3578182fd5b600060208284031215610b09578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b90815260200190565b600082821015610bcf57634e487b7160e01b81526011600452602481fd5b50039056fea26469706673582212206453f349fcf01260cc6335fbd793d763d46dfb325318b316b010bbfebc940dfd64736f6c63430008000033";
