/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Registry } from "./Registry";

export class RegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Registry> {
    return super.deploy(overrides || {}) as Promise<Registry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): RegistryFactory {
    return super.connect(signer) as RegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policy",
        type: "address",
      },
    ],
    name: "addPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "addStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_policyNum",
        type: "uint256",
      },
    ],
    name: "getPolicy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productNum",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_strategyNum",
        type: "uint256",
      },
    ],
    name: "getStrategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policy",
        type: "address",
      },
    ],
    name: "isPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "isProduct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "isStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numPolicies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numProducts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numStrategies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_policy",
        type: "address",
      },
    ],
    name: "removePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_product",
        type: "address",
      },
    ],
    name: "removeProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "removeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_locker",
        type: "address",
      },
    ],
    name: "setLocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
    ],
    name: "setMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_solace",
        type: "address",
      },
    ],
    name: "setSolace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "solace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610b8f806100326000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806392c40064116100f9578063eaa0968411610097578063f0f4426011610071578063f0f442601461034d578063f44a6ca914610360578063fad1c85c14610373578063fbfa77cf14610386576101b9565b8063eaa096841461032a578063ee97f7f314610332578063efbd742f1461033a576101b9565b8063b84ef081116100d3578063b84ef081146102e9578063b9db15b4146102fc578063cfc0cc341461030f578063d7b96d4e14610322576101b9565b806392c40064146102b9578063ab033ea9146102ce578063ac964f21146102e1576101b9565b80633ef8d97e116101665780636817031b116101405780636817031b1461026d578063787b67251461028057806378d38d82146102935780637fd29192146102a6576101b9565b80633ef8d97e146102555780635aa6e6751461025d57806361d027b314610265576101b9565b806326fae0d31161019757806326fae0d3146101f95780632b07fce31461020c5780632e8ebaae14610235576101b9565b8063171060ec146101be578063175188e8146101d3578063223e5479146101e6575b600080fd5b6101d16101cc3660046109fd565b61038e565b005b6101d16101e13660046109fd565b6103e3565b6101d16101f43660046109fd565b610431565b6101d16102073660046109fd565b61047b565b61021f61021a366004610a24565b6104c7565b60405161022c9190610a3c565b60405180910390f35b6102486102433660046109fd565b6104da565b60405161022c9190610a50565b61021f6104e7565b61021f6104f6565b61021f610505565b6101d161027b3660046109fd565b610514565b6101d161028e3660046109fd565b610560565b6101d16102a13660046109fd565b610595565b6102486102b43660046109fd565b6105db565b6102c16105e8565b60405161022c9190610b0b565b6101d16102dc3660046109fd565b6105f9565b6102c1610645565b6101d16102f73660046109fd565b610651565b61021f61030a366004610a24565b610697565b61021f61031d366004610a24565b6106a4565b61021f6106b1565b6102c16106c0565b61021f6106cc565b6101d16103483660046109fd565b6106db565b6101d161035b3660046109fd565b610727565b6101d161036e3660046109fd565b610773565b6102486103813660046109fd565b6107a8565b61021f6107b5565b6000546001600160a01b031633146103c15760405162461bcd60e51b81526004016103b890610a9d565b60405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633148061040657506003546001600160a01b031633145b6104225760405162461bcd60e51b81526004016103b890610ad4565b61042d6006826107c4565b5050565b6000546001600160a01b031633148061045457506003546001600160a01b031633145b6104705760405162461bcd60e51b81526004016103b890610ad4565b61042d6006826107e0565b6000546001600160a01b031633146104a55760405162461bcd60e51b81526004016103b890610a9d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d4600a836107f5565b92915050565b60006104d4600683610801565b6001546001600160a01b031681565b6000546001600160a01b031681565b6004546001600160a01b031681565b6000546001600160a01b0316331461053e5760405162461bcd60e51b81526004016103b890610a9d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461058a5760405162461bcd60e51b81526004016103b890610a9d565b61042d6008826107c4565b6000546001600160a01b03163314806105b457506105b4600833610801565b6105d05760405162461bcd60e51b81526004016103b890610ad4565b61042d600a826107c4565b60006104d4600883610801565b60006105f46006610816565b905090565b6000546001600160a01b031633146106235760405162461bcd60e51b81526004016103b890610a9d565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006105f46008610816565b6000546001600160a01b03163314806106705750610670600833610801565b61068c5760405162461bcd60e51b81526004016103b890610ad4565b61042d600a826107e0565b60006104d46008836107f5565b60006104d46006836107f5565b6005546001600160a01b031681565b60006105f4600a610816565b6002546001600160a01b031681565b6000546001600160a01b031633146107055760405162461bcd60e51b81526004016103b890610a9d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107515760405162461bcd60e51b81526004016103b890610a9d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461079d5760405162461bcd60e51b81526004016103b890610a9d565b61042d6008826107e0565b60006104d4600a83610801565b6003546001600160a01b031681565b60006107d9836001600160a01b038416610821565b9392505050565b60006107d9836001600160a01b03841661093e565b60006107d98383610988565b60006107d9836001600160a01b0384166109e1565b60006104d4826109f9565b60008181526001830160205260408120548015610934576000610845600183610b2c565b855490915060009061085990600190610b2c565b9050600086600001828154811061088057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106108b157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001556108c8836001610b14565b600082815260018901602052604090205586548790806108f857634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506104d4565b60009150506104d4565b600061094a83836109e1565b610980575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d4565b5060006104d4565b815460009082106109ab5760405162461bcd60e51b81526004016103b890610a5b565b8260000182815481106109ce57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600060208284031215610a0e578081fd5b81356001600160a01b03811681146107d9578182fd5b600060208284031215610a35578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526008908201527f216d616e61676572000000000000000000000000000000000000000000000000604082015260600190565b90815260200190565b60008219821115610b2757610b27610b43565b500190565b600082821015610b3e57610b3e610b43565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122063c6a0452af35828a2f8cd05fb6936958623fcaadeee49608fb0f9caad4b354e64736f6c63430008000033";
