/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ExchangeQuoterInterface extends ethers.utils.Interface {
  functions: {
    "ETH_ADDRESS()": FunctionFragment;
    "oneSplitView()": FunctionFragment;
    "tokenToEth(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "oneSplitView",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenToEth",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "ETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "oneSplitView",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenToEth", data: BytesLike): Result;

  events: {};
}

export class ExchangeQuoter extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ExchangeQuoterInterface;

  functions: {
    ETH_ADDRESS(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "ETH_ADDRESS()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    oneSplitView(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "oneSplitView()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tokenToEth(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "tokenToEth(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;
  };

  ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

  "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<string>;

  oneSplitView(overrides?: CallOverrides): Promise<string>;

  "oneSplitView()"(overrides?: CallOverrides): Promise<string>;

  tokenToEth(
    _token: string,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenToEth(address,uint256)"(
    _token: string,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<string>;

    oneSplitView(overrides?: CallOverrides): Promise<string>;

    "oneSplitView()"(overrides?: CallOverrides): Promise<string>;

    tokenToEth(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenToEth(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<BigNumber>;

    oneSplitView(overrides?: CallOverrides): Promise<BigNumber>;

    "oneSplitView()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenToEth(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenToEth(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    oneSplitView(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "oneSplitView()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenToEth(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenToEth(address,uint256)"(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
