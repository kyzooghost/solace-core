/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PolicyManagerInterface extends ethers.utils.Interface {
  functions: {
    "acceptGovernance()": FunctionFragment;
    "addProduct(address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "burn(uint256)": FunctionFragment;
    "createPolicy(address,address,uint256,uint64,uint24)": FunctionFragment;
    "getApproved(uint256)": FunctionFragment;
    "getPolicyCoverAmount(uint256)": FunctionFragment;
    "getPolicyExpirationBlock(uint256)": FunctionFragment;
    "getPolicyInfo(uint256)": FunctionFragment;
    "getPolicyIsActive(uint256)": FunctionFragment;
    "getPolicyPositionContract(uint256)": FunctionFragment;
    "getPolicyPrice(uint256)": FunctionFragment;
    "getPolicyProduct(uint256)": FunctionFragment;
    "getPolicyholder(uint256)": FunctionFragment;
    "getProduct(uint256)": FunctionFragment;
    "governance()": FunctionFragment;
    "hasActivePolicy(address,address,address)": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "listPolicies(address)": FunctionFragment;
    "name()": FunctionFragment;
    "newGovernance()": FunctionFragment;
    "numProducts()": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "policySearchMap(address,address,address)": FunctionFragment;
    "productIsActive(address)": FunctionFragment;
    "removeProduct(address)": FunctionFragment;
    "safeTransferFrom(address,address,uint256)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "setGovernance(address)": FunctionFragment;
    "setPolicyInfo(uint256,address,address,uint256,uint64,uint24)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "symbol()": FunctionFragment;
    "tokenByIndex(uint256)": FunctionFragment;
    "tokenOfOwnerByIndex(address,uint256)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "totalPolicyCount()": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "addProduct", values: [string]): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(functionFragment: "burn", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "createPolicy",
    values: [string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyCoverAmount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyExpirationBlock",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyIsActive",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyPositionContract",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyPrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyProduct",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPolicyholder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProduct",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "governance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hasActivePolicy",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "listPolicies",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "newGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "numProducts",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "policySearchMap",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "productIsActive",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeProduct",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPolicyInfo",
    values: [
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalPolicyCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addProduct", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "createPolicy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyCoverAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyExpirationBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyIsActive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyPositionContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyProduct",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPolicyholder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getProduct", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "governance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "hasActivePolicy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "listPolicies",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "newGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "numProducts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "policySearchMap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "productIsActive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProduct",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPolicyInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalPolicyCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "ApprovalForAll(address,address,bool)": EventFragment;
    "GovernanceTransferred(address)": EventFragment;
    "PolicyBurned(uint256)": EventFragment;
    "PolicyCreated(uint256)": EventFragment;
    "ProductAdded(address)": EventFragment;
    "ProductRemoved(address)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GovernanceTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PolicyBurned"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PolicyCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProductAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProductRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export class PolicyManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PolicyManagerInterface;

  functions: {
    acceptGovernance(overrides?: Overrides): Promise<ContractTransaction>;

    "acceptGovernance()"(overrides?: Overrides): Promise<ContractTransaction>;

    addProduct(
      _product: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addProduct(address)"(
      _product: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    burn(
      _policyId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "burn(uint256)"(
      _policyId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createPolicy(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createPolicy(address,address,uint256,uint64,uint24)"(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getPolicyCoverAmount(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getPolicyCoverAmount(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getPolicyExpirationBlock(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getPolicyExpirationBlock(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getPolicyInfo(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      policyholder: string;
      product: string;
      positionContract: string;
      coverAmount: BigNumber;
      expirationBlock: BigNumber;
      price: number;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: number;
    }>;

    "getPolicyInfo(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      policyholder: string;
      product: string;
      positionContract: string;
      coverAmount: BigNumber;
      expirationBlock: BigNumber;
      price: number;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: number;
    }>;

    getPolicyIsActive(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "getPolicyIsActive(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getPolicyPositionContract(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getPolicyPositionContract(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getPolicyPrice(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "getPolicyPrice(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    getPolicyProduct(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getPolicyProduct(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getPolicyholder(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getPolicyholder(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getProduct(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getProduct(uint256)"(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    governance(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "governance()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    hasActivePolicy(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "hasActivePolicy(address,address,address)"(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    listPolicies(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenIDs: BigNumber[];
      0: BigNumber[];
    }>;

    "listPolicies(address)"(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenIDs: BigNumber[];
      0: BigNumber[];
    }>;

    name(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "name()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    newGovernance(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "newGovernance()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    numProducts(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "numProducts()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    policySearchMap(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "policySearchMap(address,address,address)"(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    productIsActive(
      _product: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "productIsActive(address)"(
      _product: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    removeProduct(
      _product: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeProduct(address)"(
      _product: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPolicyInfo(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPolicyInfo(uint256,address,address,uint256,uint64,uint24)"(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    symbol(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "symbol()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    totalPolicyCount(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalPolicyCount()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    totalSupply(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalSupply()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  acceptGovernance(overrides?: Overrides): Promise<ContractTransaction>;

  "acceptGovernance()"(overrides?: Overrides): Promise<ContractTransaction>;

  addProduct(
    _product: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addProduct(address)"(
    _product: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  burn(
    _policyId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "burn(uint256)"(
    _policyId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createPolicy(
    _policyholder: string,
    _positionContract: string,
    _coverAmount: BigNumberish,
    _expirationBlock: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createPolicy(address,address,uint256,uint64,uint24)"(
    _policyholder: string,
    _positionContract: string,
    _coverAmount: BigNumberish,
    _expirationBlock: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getApproved(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getApproved(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getPolicyCoverAmount(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPolicyCoverAmount(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPolicyExpirationBlock(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPolicyExpirationBlock(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPolicyInfo(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    policyholder: string;
    product: string;
    positionContract: string;
    coverAmount: BigNumber;
    expirationBlock: BigNumber;
    price: number;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: BigNumber;
    5: number;
  }>;

  "getPolicyInfo(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    policyholder: string;
    product: string;
    positionContract: string;
    coverAmount: BigNumber;
    expirationBlock: BigNumber;
    price: number;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: BigNumber;
    5: number;
  }>;

  getPolicyIsActive(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getPolicyIsActive(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getPolicyPositionContract(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getPolicyPositionContract(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getPolicyPrice(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  "getPolicyPrice(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getPolicyProduct(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getPolicyProduct(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getPolicyholder(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getPolicyholder(uint256)"(
    _policyID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getProduct(
    _productNum: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getProduct(uint256)"(
    _productNum: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  governance(overrides?: CallOverrides): Promise<string>;

  "governance()"(overrides?: CallOverrides): Promise<string>;

  hasActivePolicy(
    _product: string,
    _policyholder: string,
    _positionContract: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasActivePolicy(address,address,address)"(
    _product: string,
    _policyholder: string,
    _positionContract: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isApprovedForAll(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isApprovedForAll(address,address)"(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  listPolicies(
    _policyholder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "listPolicies(address)"(
    _policyholder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  newGovernance(overrides?: CallOverrides): Promise<string>;

  "newGovernance()"(overrides?: CallOverrides): Promise<string>;

  numProducts(overrides?: CallOverrides): Promise<BigNumber>;

  "numProducts()"(overrides?: CallOverrides): Promise<BigNumber>;

  ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "ownerOf(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  policySearchMap(
    arg0: string,
    arg1: string,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "policySearchMap(address,address,address)"(
    arg0: string,
    arg1: string,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  productIsActive(
    _product: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "productIsActive(address)"(
    _product: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  removeProduct(
    _product: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeProduct(address)"(
    _product: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    operator: string,
    approved: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setApprovalForAll(address,bool)"(
    operator: string,
    approved: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setGovernance(
    _governance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setGovernance(address)"(
    _governance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPolicyInfo(
    _policyId: BigNumberish,
    _policyholder: string,
    _positionContract: string,
    _coverAmount: BigNumberish,
    _expirationBlock: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPolicyInfo(uint256,address,address,uint256,uint64,uint24)"(
    _policyId: BigNumberish,
    _policyholder: string,
    _positionContract: string,
    _coverAmount: BigNumberish,
    _expirationBlock: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  symbol(overrides?: CallOverrides): Promise<string>;

  "symbol()"(overrides?: CallOverrides): Promise<string>;

  tokenByIndex(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenByIndex(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenOfOwnerByIndex(
    owner: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenOfOwnerByIndex(address,uint256)"(
    owner: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenURI(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  totalPolicyCount(overrides?: CallOverrides): Promise<BigNumber>;

  "totalPolicyCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptGovernance(overrides?: CallOverrides): Promise<void>;

    "acceptGovernance()"(overrides?: CallOverrides): Promise<void>;

    addProduct(_product: string, overrides?: CallOverrides): Promise<void>;

    "addProduct(address)"(
      _product: string,
      overrides?: CallOverrides
    ): Promise<void>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burn(_policyId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "burn(uint256)"(
      _policyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createPolicy(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createPolicy(address,address,uint256,uint64,uint24)"(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getPolicyCoverAmount(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyCoverAmount(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyExpirationBlock(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyExpirationBlock(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyInfo(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      policyholder: string;
      product: string;
      positionContract: string;
      coverAmount: BigNumber;
      expirationBlock: BigNumber;
      price: number;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: number;
    }>;

    "getPolicyInfo(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      policyholder: string;
      product: string;
      positionContract: string;
      coverAmount: BigNumber;
      expirationBlock: BigNumber;
      price: number;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber;
      5: number;
    }>;

    getPolicyIsActive(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getPolicyIsActive(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getPolicyPositionContract(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getPolicyPositionContract(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getPolicyPrice(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    "getPolicyPrice(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getPolicyProduct(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getPolicyProduct(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getPolicyholder(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getPolicyholder(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getProduct(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getProduct(uint256)"(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    governance(overrides?: CallOverrides): Promise<string>;

    "governance()"(overrides?: CallOverrides): Promise<string>;

    hasActivePolicy(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasActivePolicy(address,address,address)"(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    listPolicies(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "listPolicies(address)"(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    newGovernance(overrides?: CallOverrides): Promise<string>;

    "newGovernance()"(overrides?: CallOverrides): Promise<string>;

    numProducts(overrides?: CallOverrides): Promise<BigNumber>;

    "numProducts()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    policySearchMap(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "policySearchMap(address,address,address)"(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    productIsActive(
      _product: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "productIsActive(address)"(
      _product: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    removeProduct(_product: string, overrides?: CallOverrides): Promise<void>;

    "removeProduct(address)"(
      _product: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernance(
      _governance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPolicyInfo(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPolicyInfo(uint256,address,address,uint256,uint64,uint24)"(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    symbol(overrides?: CallOverrides): Promise<string>;

    "symbol()"(overrides?: CallOverrides): Promise<string>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalPolicyCount(overrides?: CallOverrides): Promise<BigNumber>;

    "totalPolicyCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Approval(
      owner: string | null,
      approved: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;

    ApprovalForAll(
      owner: string | null,
      operator: string | null,
      approved: null
    ): EventFilter;

    GovernanceTransferred(_newGovernance: null): EventFilter;

    PolicyBurned(tokenID: null): EventFilter;

    PolicyCreated(tokenID: null): EventFilter;

    ProductAdded(product: null): EventFilter;

    ProductRemoved(product: null): EventFilter;

    Transfer(
      from: string | null,
      to: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;
  };

  estimateGas: {
    acceptGovernance(overrides?: Overrides): Promise<BigNumber>;

    "acceptGovernance()"(overrides?: Overrides): Promise<BigNumber>;

    addProduct(_product: string, overrides?: Overrides): Promise<BigNumber>;

    "addProduct(address)"(
      _product: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burn(_policyId: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "burn(uint256)"(
      _policyId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createPolicy(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createPolicy(address,address,uint256,uint64,uint24)"(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyCoverAmount(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyCoverAmount(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyExpirationBlock(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyExpirationBlock(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyInfo(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyInfo(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyIsActive(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyIsActive(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyPositionContract(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyPositionContract(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyPrice(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyPrice(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyProduct(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyProduct(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPolicyholder(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPolicyholder(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProduct(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProduct(uint256)"(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    governance(overrides?: CallOverrides): Promise<BigNumber>;

    "governance()"(overrides?: CallOverrides): Promise<BigNumber>;

    hasActivePolicy(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasActivePolicy(address,address,address)"(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    listPolicies(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "listPolicies(address)"(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    newGovernance(overrides?: CallOverrides): Promise<BigNumber>;

    "newGovernance()"(overrides?: CallOverrides): Promise<BigNumber>;

    numProducts(overrides?: CallOverrides): Promise<BigNumber>;

    "numProducts()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    policySearchMap(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "policySearchMap(address,address,address)"(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    productIsActive(
      _product: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "productIsActive(address)"(
      _product: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeProduct(_product: string, overrides?: Overrides): Promise<BigNumber>;

    "removeProduct(address)"(
      _product: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPolicyInfo(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPolicyInfo(uint256,address,address,uint256,uint64,uint24)"(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    "symbol()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalPolicyCount(overrides?: CallOverrides): Promise<BigNumber>;

    "totalPolicyCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptGovernance(overrides?: Overrides): Promise<PopulatedTransaction>;

    "acceptGovernance()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    addProduct(
      _product: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addProduct(address)"(
      _product: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burn(
      _policyId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "burn(uint256)"(
      _policyId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createPolicy(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createPolicy(address,address,uint256,uint64,uint24)"(
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyCoverAmount(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyCoverAmount(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyExpirationBlock(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyExpirationBlock(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyInfo(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyInfo(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyIsActive(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyIsActive(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyPositionContract(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyPositionContract(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyPrice(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyPrice(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyProduct(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyProduct(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPolicyholder(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPolicyholder(uint256)"(
      _policyID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProduct(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProduct(uint256)"(
      _productNum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    governance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "governance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hasActivePolicy(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasActivePolicy(address,address,address)"(
      _product: string,
      _policyholder: string,
      _positionContract: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    listPolicies(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "listPolicies(address)"(
      _policyholder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    newGovernance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "newGovernance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    numProducts(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numProducts()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    policySearchMap(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "policySearchMap(address,address,address)"(
      arg0: string,
      arg1: string,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    productIsActive(
      _product: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "productIsActive(address)"(
      _product: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeProduct(
      _product: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeProduct(address)"(
      _product: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setGovernance(
      _governance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setGovernance(address)"(
      _governance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPolicyInfo(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPolicyInfo(uint256,address,address,uint256,uint64,uint24)"(
      _policyId: BigNumberish,
      _policyholder: string,
      _positionContract: string,
      _coverAmount: BigNumberish,
      _expirationBlock: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalPolicyCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalPolicyCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
