/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { LpAppraisor } from "./LpAppraisor";

export class LpAppraisorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    _lpToken: string,
    _curve_A: BigNumberish,
    _curve_B: BigNumberish,
    overrides?: Overrides
  ): Promise<LpAppraisor> {
    return super.deploy(
      _governance,
      _lpToken,
      _curve_A,
      _curve_B,
      overrides || {}
    ) as Promise<LpAppraisor>;
  }
  getDeployTransaction(
    _governance: string,
    _lpToken: string,
    _curve_A: BigNumberish,
    _curve_B: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _lpToken,
      _curve_A,
      _curve_B,
      overrides || {}
    );
  }
  attach(address: string): LpAppraisor {
    return super.attach(address) as LpAppraisor;
  }
  connect(signer: Signer): LpAppraisorFactory {
    return super.connect(signer) as LpAppraisorFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LpAppraisor {
    return new Contract(address, _abi, signerOrProvider) as LpAppraisor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_curve_A",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_curve_B",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "appraise",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curve_A",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curve_B2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IUniswapLpToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_curve_A",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_curve_B",
        type: "uint256",
      },
    ],
    name: "setCurve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a2c38038062000a2c8339810160408190526200003491620000a0565b600080546001600160a01b038087166001600160a01b0319928316179092556002805492861692909116919091178155600383905562000075908262000134565b600455506200024292505050565b80516001600160a01b03811681146200009b57600080fd5b919050565b60008060008060808587031215620000b6578384fd5b620000c18562000083565b9350620000d16020860162000083565b6040860151606090960151949790965092505050565b80825b6001808611620000fb57506200012b565b8187048211156200011057620001106200022c565b808616156200011e57918102915b9490941c938002620000ea565b94509492505050565b60006200014860001960ff8516846200014f565b9392505050565b600082620001605750600162000148565b816200016f5750600062000148565b81600181146200018857600281146200019357620001c7565b600191505062000148565b60ff841115620001a757620001a76200022c565b6001841b915084821115620001c057620001c06200022c565b5062000148565b5060208310610133831016604e8410600b8410161715620001ff575081810a83811115620001f957620001f96200022c565b62000148565b6200020e8484846001620000e7565b8086048211156200022357620002236200022c565b02949350505050565b634e487b7160e01b600052601160045260246000fd5b6107da80620002526000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635fcbd28511610076578063ab033ea91161005b578063ab033ea9146100fd578063dc08e43114610110578063f56ff92814610123576100a3565b80635fcbd285146100ed5780638b85cc7e146100f5576100a3565b80631385fcb0146100a8578063238efcbc146100c657806351b2df17146100d05780635aa6e675146100d8575b600080fd5b6100b0610136565b6040516100bd91906105a1565b60405180910390f35b6100ce61013c565b005b6100b06101db565b6100e06101e1565b6040516100bd9190610556565b6100e06101f0565b6100e06101ff565b6100ce61010b36600461041b565b61020e565b6100ce61011e366004610456565b610267565b6100b061013136600461043e565b6102a8565b60045481565b6001546001600160a01b0316331461016f5760405162461bcd60e51b81526004016101669061056a565b60405180910390fd5b600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b038416179091551690556040517ff2c4a3b084b019a98d9c1a566a17ac81667550bfc69a028299f70b4e9e4bba56906101d1903390610556565b60405180910390a1565b60035481565b6000546001600160a01b031681565b6002546001600160a01b031681565b6001546001600160a01b031681565b6000546001600160a01b031633146102385760405162461bcd60e51b81526004016101669061056a565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102915760405162461bcd60e51b81526004016101669061056a565b60038290556102a1600282610628565b6004555050565b60025460405163133f757160e31b81526000918291829182916001600160a01b03909116906399fbab88906102e19088906004016105a1565b6101806040518083038186803b1580156102fa57600080fd5b505afa15801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610477565b5050505097509750975050505050506000838361034f9190610718565b60020b9050610370816fffffffffffffffffffffffffffffffff84166106f9565b94506003548111156103bd5760045460026003548361038f919061075f565b6103999190610628565b6103a391906105aa565b6004546103b090876106f9565b6103ba91906105c2565b94505b50505050919050565b80516103d18161078c565b919050565b8051600281900b81146103d157600080fd5b80516fffffffffffffffffffffffffffffffff811681146103d157600080fd5b805162ffffff811681146103d157600080fd5b60006020828403121561042c578081fd5b81356104378161078c565b9392505050565b60006020828403121561044f578081fd5b5035919050565b60008060408385031215610468578081fd5b50508035926020909101359150565b6000806000806000806000806000806000806101808d8f031215610499578788fd5b8c516bffffffffffffffffffffffff811681146104b4578889fd5b9b506104c260208e016103c6565b9a506104d060408e016103c6565b99506104de60608e016103c6565b98506104ec60808e01610408565b97506104fa60a08e016103d6565b965061050860c08e016103d6565b955061051660e08e016103e8565b94506101008d015193506101208d015192506105356101408e016103e8565b91506105446101608e016103e8565b90509295989b509295989b509295989b565b6001600160a01b0391909116815260200190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b90815260200190565b600082198211156105bd576105bd610776565b500190565b6000826105dd57634e487b7160e01b81526012600452602481fd5b500490565b80825b60018086116105f4575061061f565b81870482111561060657610606610776565b8086161561061357918102915b9490941c9380026105e5565b94509492505050565b600061043760001960ff85168460008261064457506001610437565b8161065157506000610437565b816001811461066757600281146106715761069e565b6001915050610437565b60ff84111561068257610682610776565b6001841b91508482111561069857610698610776565b50610437565b5060208310610133831016604e8410600b84101617156106d1575081810a838111156106cc576106cc610776565b610437565b6106de84848460016105e2565b8086048211156106f0576106f0610776565b02949350505050565b600081600019048311821515161561071357610713610776565b500290565b60008160020b8360020b82811281627fffff190183128115161561073e5761073e610776565b81627fffff01831381161561075557610755610776565b5090039392505050565b60008282101561077157610771610776565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146107a157600080fd5b5056fea2646970667358221220f58ba5de489c37ff0eeb876fa15a20631cb8b1b2d5d74805812b39a26fa372fe64736f6c63430008000033";
